{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport react, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport CardFrame from \"./cardFrame\";\nimport Styles from \"../constant/GlobalStyles\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport ButtonTypeRadio from \"./ButtonTypeRadio\";\nimport ModalView from \"./ModalView\";\nimport Colors from \"../constant/color\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParagraph } from \"../actions/fetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar FlatListView = function FlatListView(props) {\n  return;\n  _jsx(_Fragment, {\n    children: props.refreshing ? _jsx(ActivityIndicator, {\n      children: props.onEndReached()\n    }) : _jsx(FlatList, _objectSpread({}, props))\n  });\n};\nexport default FlatListView;","map":{"version":3,"names":["StatusBar","React","useEffect","useLayoutEffect","useState","react","Component","StyleSheet","Text","View","TouchableOpacity","Modal","FlatList","ActivityIndicator","SafeAreaView","Dimensions","axios","CardFrame","Styles","Header","Profile","ButtonTypeRadio","ModalView","Colors","useDispatch","useSelector","getParagraph","jsx","_jsx","Fragment","_Fragment","FlatListView","props","children","refreshing","onEndReached","_objectSpread"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/customComponent/FlatLIstView.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect, useLayoutEffect,useState} from 'react';\nimport react, { Component } from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Modal, FlatList, ActivityIndicator,SafeAreaView,Dimensions} from 'react-native';\nimport axios from \"axios\";\n//import { useInfiniteQuery } from 'react-query';\n\nimport CardFrame from './cardFrame';\nimport Styles from '../constant/GlobalStyles'\nimport Header from './Header';\nimport Profile from './Profile';\nimport ButtonTypeRadio from './ButtonTypeRadio';\nimport ModalView from './ModalView';\n\n\nimport Colors from '../constant/color'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParagraph } from '../actions/fetch';\n//import Languages from './languages';\n\n const FlatListView=(props)=> {\n /*   useEffect(() => {\n      //setIsLoading(false);\n      if(refreshing && isLoading){\n     // setLangState({isLoading:true,refreshing:true});\n      dispatch(getParagraph({selectedLanguage:stateObj.selectedObject.selectedLanguage,selectedWorkType:stateObj.selectedObject.selectedWorkType,alreadyExists:true,nextUrl:stateObj.selectedObject.nextUrl}))\n      setLangState({isLoading:false,refreshing:false});\n      }\n  \n    }, [isLoading]);\n\n  \n    return isLoading;\n  }\n\n\nfunction FlatListView({props,dependency}){\n    useEffect(()=>{\nconst {refreshing}={...props};\nsetRefreshing(false);\nreturn(\n*/\n\n//const {onEndReached,onEndReachedThreshold,refreshing,onRefresh}={...props}\n                    \n                    \n\n\n//var selectedItem=null;\nreturn\n(\n  <>\n     { \n    (props.refreshing)?\n    <ActivityIndicator>{props.onEndReached()}</ActivityIndicator>\n    :\n    \n      <FlatList {...props} />\n                  \n     }\n      </>           \n                    \n)\n\n     \n\n                \n                  \n                  \n\n   /*             \n  )\n        //dispatch(getParagraph({selectedLanguage:stateObj.selectedObject.selectedLanguage,selectedWorkType:stateObj.selectedObject.selectedWorkType,alreadyExists:true,nextUrl:stateObj.selectedObject.nextUrl})) \n    },[refreshing])\n    //const state1 = useSelector((state) => state);\n   // const state = props.stateObject;\n    //const state=state1.selectedObject;\n//    alert(\"state in flatlist\"+JSON.stringify(state));\n\n\nconst [refreshing,setRefreshing]=useState(props.refreshing);\n//alert(JSON.stringify(props.refreshing))\n\n  */\n};\n\nexport default FlatListView"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAEC,SAAS,EAAEC,eAAe,EAACC,QAAQ,QAAO,OAAO;AAC/D,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAGhB,OAAOC,MAAM;AACb,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAG/C,IAAMC,YAAY,GAAC,SAAbA,YAAYA,CAAEC,KAAK,EAAI;EA6B9B;EAEEJ,IAAA,CAAAE,SAAA;IAAAG,QAAA,EAEGD,KAAK,CAACE,UAAU,GACjBN,IAAA,CAACf,iBAAiB;MAAAoB,QAAA,EAAED,KAAK,CAACG,YAAY,CAAC;IAAC,CAAoB,CAAC,GAG3DP,IAAA,CAAChB,QAAQ,EAAAwB,aAAA,KAAKJ,KAAK,CAAG;EAAC,CAGrB,CAAC;AAwBT,CAAC;AAED,eAAeD,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}