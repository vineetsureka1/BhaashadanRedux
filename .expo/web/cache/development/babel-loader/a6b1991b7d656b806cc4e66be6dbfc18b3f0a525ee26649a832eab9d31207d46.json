{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useLayoutEffect, useState } from 'react';\nimport react, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport CardFrame from \"./cardFrame\";\nimport Styles from \"../constant/GlobalStyles\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport ButtonTypeRadio from \"./ButtonTypeRadio\";\nimport ModalView from \"./ModalView\";\nimport FlatListView from \"./FlatLIstView\";\nimport Colors from \"../constant/color\";\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { getParagraph } from \"../actions/fetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar ListOfObject = function ListOfObject(props) {\n  var _useState = useState(props.refreshing),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshChild = _useState2[0],\n    setRefreshChild = _useState2[1];\n  function getMoreData() {\n    props.onRefresh();\n  }\n  var updatedScrollIndex = props.initialScrollIndex + 4;\n  return _jsx(_Fragment, {\n    children: _jsx(View, {\n      style: localStyles.tileContainer,\n      children: refreshing ? _jsx(View, {\n        children: _jsx(ActivityIndicator, {})\n      }) : _jsx(View, {\n        children: _jsx(FlatList, {\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          contentContainerStyle: {\n            justifyContent: 'center',\n            flexDirection: 'row',\n            flexWrap: 'wrap'\n          },\n          data: stateObj.selectedObject.results,\n          renderItem: function renderItem(item, props) {\n            return _renderItem(item);\n          },\n          ListEmptyComponent: _jsx(View, {\n            children: _jsx(Text, {\n              children: \" no item to render\"\n            })\n          }),\n          hasMore: stateObj.selectedObject.nextUrl ? true : false,\n          onEndReached: handleEndReached,\n          scrollEnabled: true,\n          onscroll: handleEndReached,\n          initialScrollIndex: initialScrollIndex,\n          onEndReachedThreshold: stateObj.selectedObject.nextUrl ? 0.1 : 0,\n          horizontal: false,\n          refreshing: refreshing,\n          onRefresh: setLangState,\n          initialNumToRender: initialScrollIndex\n        }, function (item) {\n          return item.id;\n        })\n      })\n    })\n  });\n};\nexport default ListOfObject;","map":{"version":3,"names":["StatusBar","React","useLayoutEffect","useState","react","Component","StyleSheet","Text","View","TouchableOpacity","Modal","FlatList","ActivityIndicator","SafeAreaView","Dimensions","axios","CardFrame","Styles","Header","Profile","ButtonTypeRadio","ModalView","FlatListView","Colors","useDispatch","useSelector","useStore","getParagraph","jsx","_jsx","Fragment","_Fragment","ListOfObject","props","_useState","refreshing","_useState2","_slicedToArray","refreshChild","setRefreshChild","getMoreData","onRefresh","updatedScrollIndex","initialScrollIndex","children","style","localStyles","tileContainer","keyExtractor","item","id","contentContainerStyle","justifyContent","flexDirection","flexWrap","data","stateObj","selectedObject","results","renderItem","_renderItem","ListEmptyComponent","hasMore","nextUrl","onEndReached","handleEndReached","scrollEnabled","onscroll","onEndReachedThreshold","horizontal","setLangState","initialNumToRender"],"sources":["C:/Users/vinee/Desktop/BhaashadanRedux/src/customComponent/ListOfObject.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useLayoutEffect,useState} from 'react';\nimport react, { Component } from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Modal, FlatList, ActivityIndicator,SafeAreaView,Dimensions} from 'react-native';\nimport axios from \"axios\";\n//import { useInfiniteQuery } from 'react-query';\n\nimport CardFrame from './cardFrame';\nimport Styles from '../constant/GlobalStyles'\nimport Header from './Header';\nimport Profile from './Profile';\nimport ButtonTypeRadio from './ButtonTypeRadio';\nimport ModalView from './ModalView';\nimport FlatListView from './FlatLIstView';\n\n\nimport Colors from '../constant/color'\nimport { useDispatch, useSelector, useStore } from 'react-redux';\nimport { getParagraph } from '../actions/fetch';\n//import Languages from './languages';\n\nconst ListOfObject=(props)=>{\n    const [refreshChild,setRefreshChild] = useState(props.refreshing);\n   // const state = props.stateObject;\n    //const state=state1.selectedObject;\n//    alert(\"state in flatlist\"+JSON.stringify(state));\n//const currentObj = useSelector((state) => state.language.selectedObject);\n//const [isLoading,setIsLoading]=useState(false);\n/*\nfunction changeRefreshing({ src, isEndReached }) {\n  \n\n  useEffect(() => {\n    fetData();\n\n  }, [refreshing]);\n\n  return refreshing;\n}\n*/\n//const {onEndReached,onEndReachedThreshold,refreshing,onRefresh}={...props}\n//const [refreshChild,setRefreshChild]=useState(true);\n//var selectedItem=null;\nfunction getMoreData(){\n//props.onEndReached\nprops.onRefresh();\n//props.onEndReached();\n//\n//setRefreshChild(!refreshChild);\n\n\n}\nconst updatedScrollIndex=props.initialScrollIndex+4;\n//const stateObj = useSelector((state) => state.language.selectedObject.results);\nreturn (\n  \n\n<>\n<View style={localStyles.tileContainer}>\n              \n              \n              {\n               \n             refreshing ?\n             <View>\n             \n              \n             \n                 \n                <ActivityIndicator/>\n               \n             </View>\n             \n             :\n             \n             <View>\n             \n             \n             <FlatList\n                   //ref={flatListRef}\n                   keyExtractor={(item) => item.id}\n                   key={(item)=>item.id}\n                   contentContainerStyle={{ justifyContent: 'center', flexDirection: 'row', flexWrap: 'wrap' }}\n                   data={stateObj.selectedObject.results}\n                   renderItem={(item,props)=>_renderItem(item)}\n                //  renderItem={(item)=><View><Text>{item.id}</Text></View>}\n                   ListEmptyComponent={<View><Text> no item to render</Text></View>}\n                   hasMore={stateObj.selectedObject.nextUrl?true:false}\n                  //prevUrl  nextUrl\n                   onEndReached={handleEndReached}\n                   \n                   scrollEnabled={true}\n                   onscroll={handleEndReached}\n                   initialScrollIndex={initialScrollIndex}\n                   \n                  onEndReachedThreshold={stateObj.selectedObject.nextUrl?0.1:0}\n                  \n                   \n                   \n                   horizontal={false}\n                   //onEndReached={this.handleScroll.bind(this)}\n                   refreshing={refreshing}\n                   onRefresh={setLangState}\n                   initialNumToRender={initialScrollIndex}\n                   />\n                   {\n                //  getItemLayout={(any,number) => ( {length: 200,offset:(250*((number-1)/numberOfColumn)), index: number})}\n                  // initialScrollIndex={0}\n                  // initialScrollIndex={10}\n                     \n                     \n                //   maxToRenderPerBatch={10}\n                  // numColumns={2}\n                  // style={{width:'100%',flexGrow:1}}\n                   //onMomentumScrollBegin={() => {this.onEndReachedCalledDuringMomentum = false;}}\n                   \n             }\n             </View>  \n             }        \n               </View> \n</>)\n\n\n}\n\n\nexport default ListOfObject"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAEC,eAAe,EAACC,QAAQ,QAAO,OAAO;AACpD,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAChB,OAAOC,YAAY;AAGnB,OAAOC,MAAM;AACb,SAASC,WAAW,EAAEC,WAAW,EAAEC,QAAQ,QAAQ,aAAa;AAChE,SAASC,YAAY;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGhD,IAAMC,YAAY,GAAC,SAAbA,YAAYA,CAAEC,KAAK,EAAG;EACxB,IAAAC,SAAA,GAAuC/B,QAAQ,CAAC8B,KAAK,CAACE,UAAU,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAA1DI,YAAY,GAAAF,UAAA;IAACG,eAAe,GAAAH,UAAA;EAqBvC,SAASI,WAAWA,CAAA,EAAE;IAEtBP,KAAK,CAACQ,SAAS,CAAC,CAAC;EAMjB;EACA,IAAMC,kBAAkB,GAACT,KAAK,CAACU,kBAAkB,GAAC,CAAC;EAEnD,OAGAd,IAAA,CAAAE,SAAA;IAAAa,QAAA,EACAf,IAAA,CAACrB,IAAI;MAACqC,KAAK,EAAEC,WAAW,CAACC,aAAc;MAAAH,QAAA,EAK1BT,UAAU,GACVN,IAAA,CAACrB,IAAI;QAAAoC,QAAA,EAKFf,IAAA,CAACjB,iBAAiB,IAAC;MAAC,CAEjB,CAAC,GAIPiB,IAAA,CAACrB,IAAI;QAAAoC,QAAA,EAGLf,IAAA,CAAClB,QAAQ;UAEHqC,YAAY,EAAE,SAAAA,aAACC,IAAI;YAAA,OAAKA,IAAI,CAACC,EAAE;UAAA,CAAC;UAEhCC,qBAAqB,EAAE;YAAEC,cAAc,EAAE,QAAQ;YAAEC,aAAa,EAAE,KAAK;YAAEC,QAAQ,EAAE;UAAO,CAAE;UAC5FC,IAAI,EAAEC,QAAQ,CAACC,cAAc,CAACC,OAAQ;UACtCC,UAAU,EAAE,SAAAA,WAACV,IAAI,EAAChB,KAAK;YAAA,OAAG2B,WAAW,CAACX,IAAI,CAAC;UAAA,CAAC;UAE5CY,kBAAkB,EAAEhC,IAAA,CAACrB,IAAI;YAAAoC,QAAA,EAACf,IAAA,CAACtB,IAAI;cAAAqC,QAAA,EAAC;YAAkB,CAAM;UAAC,CAAM,CAAE;UACjEkB,OAAO,EAAEN,QAAQ,CAACC,cAAc,CAACM,OAAO,GAAC,IAAI,GAAC,KAAM;UAEpDC,YAAY,EAAEC,gBAAiB;UAE/BC,aAAa,EAAE,IAAK;UACpBC,QAAQ,EAAEF,gBAAiB;UAC3BtB,kBAAkB,EAAEA,kBAAmB;UAExCyB,qBAAqB,EAAEZ,QAAQ,CAACC,cAAc,CAACM,OAAO,GAAC,GAAG,GAAC,CAAE;UAI5DM,UAAU,EAAE,KAAM;UAElBlC,UAAU,EAAEA,UAAW;UACvBM,SAAS,EAAE6B,YAAa;UACxBC,kBAAkB,EAAE5B;QAAmB,GAtBlC,UAACM,IAAI;UAAA,OAAGA,IAAI,CAACC,EAAE;QAAA,CAuBnB;MAAC,CAaF;IAAC,CAEC;EAAC,CACpB,CAAC;AAGH,CAAC;AAGD,eAAelB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}