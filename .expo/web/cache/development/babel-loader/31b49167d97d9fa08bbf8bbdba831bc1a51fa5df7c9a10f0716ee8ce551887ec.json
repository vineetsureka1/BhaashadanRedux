{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport React from \"react\";\nimport \"react-native-gesture-handler\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nvar Stack = createNativeStackNavigator();\nimport Home from \"./../screens/Home/index\";\nimport Login from \"./../screens/Login/index\";\nimport { useCookies } from 'react-cookie';\nimport axios from \"axios\";\nimport globalconst from \"../constant/globalvariables\";\nimport { useDispatch } from \"react-redux\";\nimport { onLoad } from \"./../actions/auth\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar initialCall = true;\nvar AuthStack = function AuthStack(props) {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      initialRouteName: props.initialRouteName,\n      children: [_jsx(Stack.Screen, _objectSpread({\n        name: \"LoginScreen\",\n        component: Login,\n        options: {\n          headerShown: false\n        }\n      }, props)), _jsx(Stack.Screen, _objectSpread({\n        name: \"HomeScreen\",\n        component: Home,\n        options: {\n          headerShown: false\n        }\n      }, props))]\n    })\n  });\n};\nvar onLoad1 = function onLoad1() {\n  false, _readOnlyError(\"initialCall\");\n  var dispatch = useDispatch();\n  alert(\"1\");\n  dispatch(onLoad()).then(function (response) {\n    alert(\"from navigation \" + JSON.stringify(response));\n  }).catch(function (error) {});\n};\nvar NavigationProvider = function NavigationProvider(props) {\n  var _useCookies = useCookies(['bhaashadan']),\n    _useCookies2 = _slicedToArray(_useCookies, 2),\n    cookies = _useCookies2[0],\n    setCookie = _useCookies2[1];\n  var initialRouteName = 'LoginScreen';\n  var param = {};\n  axios.defaults.baseURL = globalconst.apiBaseUrl;\n  if (cookies.bhaashadan != 'undefined' && cookies.bhaashadan != null && cookies.bhaashadan.user != null) {\n    initialRouteName = 'HomeScreen';\n    var user = cookies.bhaashadan.user;\n    axios.defaults.headers.common.Authorization = cookies.bhaashadan.token;\n  }\n  if (initialCall) onLoad1();\n  return _jsx(AuthStack, {\n    initialRouteName: initialRouteName\n  });\n};\nexport default NavigationProvider;","map":{"version":3,"names":["React","NavigationContainer","createNativeStackNavigator","Stack","Home","Login","useCookies","axios","globalconst","useDispatch","onLoad","jsx","_jsx","jsxs","_jsxs","initialCall","AuthStack","props","children","Navigator","initialRouteName","Screen","_objectSpread","name","component","options","headerShown","onLoad1","_readOnlyError","dispatch","alert","then","response","JSON","stringify","catch","error","NavigationProvider","_useCookies","_useCookies2","_slicedToArray","cookies","setCookie","param","defaults","baseURL","apiBaseUrl","bhaashadan","user","headers","common","Authorization","token"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/navigation/index.js"],"sourcesContent":["import React from \"react\";\r\nimport \"react-native-gesture-handler\";\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\r\nconst Stack = createNativeStackNavigator();\r\nimport Home from \"./../screens/Home/index\";\r\nimport Login from \"./../screens/Login/index\";\r\nimport { useCookies } from 'react-cookie';\r\nimport axios from \"axios\";\r\nimport globalconst from \"../constant/globalvariables\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { onLoad } from \"./../actions/auth\";\r\nconst initialCall=true;\r\nconst AuthStack = (props) => (\r\n  <NavigationContainer>\r\n    <Stack.Navigator initialRouteName={props.initialRouteName}>\r\n      <Stack.Screen\r\n        name=\"LoginScreen\"\r\n        component={Login}\r\n        options={{ headerShown: false }}\r\n        {...props}\r\n      />\r\n      <Stack.Screen\r\n        name=\"HomeScreen\"\r\n        component={Home}\r\n        options={{ headerShown: false }}\r\n        {...props}\r\n      />\r\n    </Stack.Navigator>\r\n  </NavigationContainer>\r\n);\r\nconst onLoad1=()=>{\r\n  initialCall=false;\r\n  const dispatch = useDispatch();\r\n  alert(\"1\");\r\n  dispatch(onLoad())\r\n  .then((response)=>{\r\n    alert(\"from navigation \"+JSON.stringify(response))\r\n  })\r\n  .catch((error)=>{\r\n\r\n  })\r\n};\r\n\r\nconst NavigationProvider = (props) => {\r\n  const [cookies, setCookie] = useCookies(['bhaashadan']);\r\n  var initialRouteName='LoginScreen';\r\n  var param={}\r\n  \r\n  axios.defaults.baseURL = globalconst.apiBaseUrl;\r\n  \r\n  if(cookies.bhaashadan!='undefined' && cookies.bhaashadan!=null && cookies.bhaashadan.user!=null)\r\n  {\r\n    initialRouteName='HomeScreen';\r\n    const user=cookies.bhaashadan.user;\r\n    axios.defaults.headers.common.Authorization=cookies.bhaashadan.token;\r\n   // param={...props,user:user}\r\n  }\r\n  if(initialCall)\r\n  onLoad1();\r\n  return <AuthStack initialRouteName={initialRouteName}/>;\r\n};\r\nexport default NavigationProvider;"],"mappings":";;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,8BAA8B;AACrC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,0BAA0B,QAAQ,gCAAgC;AAC3E,IAAMC,KAAK,GAAGD,0BAA0B,CAAC,CAAC;AAC1C,OAAOE,IAAI;AACX,OAAOC,KAAK;AACZ,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,WAAW;AAClB,SAASC,WAAW,QAAQ,aAAa;AACzC,SAASC,MAAM;AAA4B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAC3C,IAAMC,WAAW,GAAC,IAAI;AACtB,IAAMC,SAAS,GAAG,SAAZA,SAASA,CAAIC,KAAK;EAAA,OACtBL,IAAA,CAACX,mBAAmB;IAAAiB,QAAA,EAClBJ,KAAA,CAACX,KAAK,CAACgB,SAAS;MAACC,gBAAgB,EAAEH,KAAK,CAACG,gBAAiB;MAAAF,QAAA,GACxDN,IAAA,CAACT,KAAK,CAACkB,MAAM,EAAAC,aAAA;QACXC,IAAI,EAAC,aAAa;QAClBC,SAAS,EAAEnB,KAAM;QACjBoB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,GAC5BT,KAAK,CACV,CAAC,EACFL,IAAA,CAACT,KAAK,CAACkB,MAAM,EAAAC,aAAA;QACXC,IAAI,EAAC,YAAY;QACjBC,SAAS,EAAEpB,IAAK;QAChBqB,OAAO,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE,GAC5BT,KAAK,CACV,CAAC;IAAA,CACa;EAAC,CACC,CAAC;AAAA,CACvB;AACD,IAAMU,OAAO,GAAC,SAARA,OAAOA,CAAA,EAAK;EACJ,KAAK,EAAAC,cAAA;EACjB,IAAMC,QAAQ,GAAGpB,WAAW,CAAC,CAAC;EAC9BqB,KAAK,CAAC,GAAG,CAAC;EACVD,QAAQ,CAACnB,MAAM,CAAC,CAAC,CAAC,CACjBqB,IAAI,CAAC,UAACC,QAAQ,EAAG;IAChBF,KAAK,CAAC,kBAAkB,GAACG,IAAI,CAACC,SAAS,CAACF,QAAQ,CAAC,CAAC;EACpD,CAAC,CAAC,CACDG,KAAK,CAAC,UAACC,KAAK,EAAG,CAEhB,CAAC,CAAC;AACJ,CAAC;AAED,IAAMC,kBAAkB,GAAG,SAArBA,kBAAkBA,CAAIpB,KAAK,EAAK;EACpC,IAAAqB,WAAA,GAA6BhC,UAAU,CAAC,CAAC,YAAY,CAAC,CAAC;IAAAiC,YAAA,GAAAC,cAAA,CAAAF,WAAA;IAAhDG,OAAO,GAAAF,YAAA;IAAEG,SAAS,GAAAH,YAAA;EACzB,IAAInB,gBAAgB,GAAC,aAAa;EAClC,IAAIuB,KAAK,GAAC,CAAC,CAAC;EAEZpC,KAAK,CAACqC,QAAQ,CAACC,OAAO,GAAGrC,WAAW,CAACsC,UAAU;EAE/C,IAAGL,OAAO,CAACM,UAAU,IAAE,WAAW,IAAIN,OAAO,CAACM,UAAU,IAAE,IAAI,IAAIN,OAAO,CAACM,UAAU,CAACC,IAAI,IAAE,IAAI,EAC/F;IACE5B,gBAAgB,GAAC,YAAY;IAC7B,IAAM4B,IAAI,GAACP,OAAO,CAACM,UAAU,CAACC,IAAI;IAClCzC,KAAK,CAACqC,QAAQ,CAACK,OAAO,CAACC,MAAM,CAACC,aAAa,GAACV,OAAO,CAACM,UAAU,CAACK,KAAK;EAEtE;EACA,IAAGrC,WAAW,EACdY,OAAO,CAAC,CAAC;EACT,OAAOf,IAAA,CAACI,SAAS;IAACI,gBAAgB,EAAEA;EAAiB,CAAC,CAAC;AACzD,CAAC;AACD,eAAeiB,kBAAkB"},"metadata":{},"sourceType":"module","externalDependencies":[]}