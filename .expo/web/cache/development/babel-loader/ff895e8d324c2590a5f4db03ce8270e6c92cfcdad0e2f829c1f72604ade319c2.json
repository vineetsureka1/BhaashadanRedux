{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT, ONLOAD, INITIALIZE, LOAD_PARA } from \"./type\";\nimport AuthService from \"../services/authService\";\nimport dataFetchService from \"../services/dataFetchService\";\nimport { initialize, getParagraph } from \"./fetch\";\nexport var login = function login(user) {\n  return function (dispatch) {\n    return AuthService.logIn(user).then(function (response) {\n      alert(\"login service\" + JSON.stringify(response));\n      {\n        localStorage.setItem('userToken', axios.defaults.headers.common.Authorization);\n        var _user = response.data.user;\n        alert(JSON.stringify(_user));\n      }\n      return new Promise(function (res, rej) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            user: response.data.user\n          }\n        });\n        res(dataFetchService.getParagraph(`Token ${response.data.token}`));\n      }).then(function (_item) {\n        return dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguageKey: response.data.user.languages[0],\n            workType: \"Pending\"\n          }\n        });\n      });\n    }, function (error) {\n      Promise.reject();\n      return error;\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    return AuthService.logOut().then(function (response) {\n      if (response.status === \"success\") {\n        dispatch({\n          type: LOGOUT,\n          payload: {\n            user: null\n          }\n        });\n        Promise.resolve();\n        return response;\n      }\n    });\n  };\n};\nexport var onLoad = function onLoad(user) {\n  return function (dispatch) {\n    return AuthService.onLoad().then(function (response) {\n      alert(\"from action \" + JSON.stringify(response));\n      {\n        dispatch({\n          type: ONLOAD,\n          payload: {\n            index: 0\n          }\n        });\n        Promise.resolve();\n        return response;\n      }\n    });\n  };\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","ONLOAD","INITIALIZE","LOAD_PARA","AuthService","dataFetchService","initialize","getParagraph","login","user","dispatch","logIn","then","response","alert","JSON","stringify","localStorage","setItem","axios","defaults","headers","common","Authorization","data","Promise","res","rej","type","payload","token","_item","selectedLanguageKey","languages","workType","error","reject","logout","logOut","status","resolve","onLoad","index"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/actions/auth.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT,ONLOAD,INITIALIZE, LOAD_PARA } from \"./type\";\r\nimport AuthService from \"../services/authService\";\r\nimport dataFetchService from \"../services/dataFetchService\";\r\nimport { initialize,getParagraph } from \"./fetch\";\r\n/*\r\nexport const login = (user) => () => {\r\n  return function (dispatch){\r\n    AuthService.logIn(user).then(\r\n      (response) => {\r\n        \r\n        alert(JSON.stringify(response));\r\n        if (response.status===200) {\r\n          localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\r\n          const user=response.data.user;\r\n          alert(JSON.stringify(user));\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.data.user }\r\n  \r\n          })\r\n  \r\n         dispatch(getParagraph({selectedLanguageKey:response.data.user.languages[0].key,workType:\"Pending\"}));\r\n          \r\n  \r\n        }\r\n  \r\n          Promise.resolve();\r\n          return response\r\n  \r\n        }\r\n      ,\r\n      (error) => {\r\n  \r\n  Promise.reject();\r\n  \r\n        return error;\r\n      }\r\n    );\r\n  }\r\n}\r\n*/\r\nexport const login = (user) => (dispatch) => {\r\n  \r\n  return AuthService.logIn(user).then(\r\n    (response) => {\r\n      \r\n      alert(\"login service\"+JSON.stringify(response));\r\n     // if (response.status===200) \r\n      {\r\n        localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\r\n        const user=response.data.user;\r\n        alert(JSON.stringify(user));\r\n       /* dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: {user:response.data.user }\r\n\r\n        })*/\r\n\r\n       //let paraResponse={()=>dataFetchService.getParagraph(`Token ${response.data.token}`)};\r\n        \r\n\r\n      }\r\n\r\n        //Promise.resolve();\r\n        //return response\r\n        return new Promise(function(res, rej){\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.data.user }\r\n  \r\n          });\r\n          res(dataFetchService.getParagraph(`Token ${response.data.token}`));\r\n      }).then((_item) =>  dispatch({\r\n        type: LOAD_PARA,\r\n        payload: {selectedLanguageKey:response.data.user.languages[0],workType:\"Pending\" }\r\n\r\n      }))\r\n}\r\n\r\n      \r\n    ,\r\n    (error) => {\r\n\r\nPromise.reject();\r\n\r\n      return error;\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  return AuthService.logOut().then((response) => {\r\n    if (response.status === \"success\") {\r\n      \r\n      dispatch({\r\n        type: LOGOUT,\r\n        payload:{user:null}\r\n      });\r\n      \r\n      Promise.resolve();\r\n      return response;\r\n    }\r\n  });\r\n};\r\n\r\nexport const onLoad = (user) => (dispatch) => {\r\n  return AuthService.onLoad().then((response) => {\r\n    alert(\"from action \"+JSON.stringify(response));\r\n    //if (response.status === \"success\")\r\n\r\n     {\r\n      dispatch({\r\n        type: ONLOAD,\r\n        payload: {index:0 }\r\n      });\r\n      \r\n      Promise.resolve();\r\n      return response;\r\n    }\r\n  });\r\n};\r\n"],"mappings":"AAAA,SAASA,aAAa,EAAEC,MAAM,EAACC,MAAM,EAACC,UAAU,EAAEC,SAAS;AAC3D,OAAOC,WAAW;AAClB,OAAOC,gBAAgB;AACvB,SAASC,UAAU,EAACC,YAAY;AAsChC,OAAO,IAAMC,KAAK,GAAG,SAARA,KAAKA,CAAIC,IAAI;EAAA,OAAK,UAACC,QAAQ,EAAK;IAE3C,OAAON,WAAW,CAACO,KAAK,CAACF,IAAI,CAAC,CAACG,IAAI,CACjC,UAACC,QAAQ,EAAK;MAEZC,KAAK,CAAC,eAAe,GAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MAE/C;QACEI,YAAY,CAACC,OAAO,CAAC,WAAW,EAAEC,KAAK,CAACC,QAAQ,CAACC,OAAO,CAACC,MAAM,CAACC,aAAa,CAAC;QAC9E,IAAMd,KAAI,GAACI,QAAQ,CAACW,IAAI,CAACf,IAAI;QAC7BK,KAAK,CAACC,IAAI,CAACC,SAAS,CAACP,KAAI,CAAC,CAAC;MAU7B;MAIE,OAAO,IAAIgB,OAAO,CAAC,UAASC,GAAG,EAAEC,GAAG,EAAC;QACnCjB,QAAQ,CAAC;UACPkB,IAAI,EAAE7B,aAAa;UACnB8B,OAAO,EAAE;YAACpB,IAAI,EAACI,QAAQ,CAACW,IAAI,CAACf;UAAK;QAEpC,CAAC,CAAC;QACFiB,GAAG,CAACrB,gBAAgB,CAACE,YAAY,CAAE,SAAQM,QAAQ,CAACW,IAAI,CAACM,KAAM,EAAC,CAAC,CAAC;MACtE,CAAC,CAAC,CAAClB,IAAI,CAAC,UAACmB,KAAK;QAAA,OAAMrB,QAAQ,CAAC;UAC3BkB,IAAI,EAAEzB,SAAS;UACf0B,OAAO,EAAE;YAACG,mBAAmB,EAACnB,QAAQ,CAACW,IAAI,CAACf,IAAI,CAACwB,SAAS,CAAC,CAAC,CAAC;YAACC,QAAQ,EAAC;UAAU;QAEnF,CAAC,CAAC;MAAA,EAAC;IACT,CAAC,EAIG,UAACC,KAAK,EAAK;MAEfV,OAAO,CAACW,MAAM,CAAC,CAAC;MAEV,OAAOD,KAAK;IACd,CACF,CAAC;EACH,CAAC;AAAA;AAED,OAAO,IAAME,MAAM,GAAG,SAATA,MAAMA,CAAA;EAAA,OAAS,UAAC3B,QAAQ,EAAK;IACxC,OAAON,WAAW,CAACkC,MAAM,CAAC,CAAC,CAAC1B,IAAI,CAAC,UAACC,QAAQ,EAAK;MAC7C,IAAIA,QAAQ,CAAC0B,MAAM,KAAK,SAAS,EAAE;QAEjC7B,QAAQ,CAAC;UACPkB,IAAI,EAAE5B,MAAM;UACZ6B,OAAO,EAAC;YAACpB,IAAI,EAAC;UAAI;QACpB,CAAC,CAAC;QAEFgB,OAAO,CAACe,OAAO,CAAC,CAAC;QACjB,OAAO3B,QAAQ;MACjB;IACF,CAAC,CAAC;EACJ,CAAC;AAAA;AAED,OAAO,IAAM4B,MAAM,GAAG,SAATA,MAAMA,CAAIhC,IAAI;EAAA,OAAK,UAACC,QAAQ,EAAK;IAC5C,OAAON,WAAW,CAACqC,MAAM,CAAC,CAAC,CAAC7B,IAAI,CAAC,UAACC,QAAQ,EAAK;MAC7CC,KAAK,CAAC,cAAc,GAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MAG7C;QACCH,QAAQ,CAAC;UACPkB,IAAI,EAAE3B,MAAM;UACZ4B,OAAO,EAAE;YAACa,KAAK,EAAC;UAAE;QACpB,CAAC,CAAC;QAEFjB,OAAO,CAACe,OAAO,CAAC,CAAC;QACjB,OAAO3B,QAAQ;MACjB;IACF,CAAC,CAAC;EACJ,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}