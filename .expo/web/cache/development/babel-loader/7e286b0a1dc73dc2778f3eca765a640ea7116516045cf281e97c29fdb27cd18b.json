{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useLayoutEffect } from 'react';\nimport react, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport CardFrame from \"./cardFrame\";\nimport Styles from \"../constant/GlobalStyles\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport ButtonTypeRadio from \"./ButtonTypeRadio\";\nimport ModalView from \"./ModalView\";\nimport Colors from \"../constant/color\";\nimport { useSelector } from 'react-redux';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FlatListView = function FlatListView(props) {\n  var state = useSelector(function (state) {\n    return state;\n  });\n  alert(\"state in flatlist\" + JSON.stringify(state));\n  return _jsx(FlatList, {\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    contentContainerStyle: {\n      justifyContent: 'center',\n      flexDirection: 'row',\n      flexWrap: 'wrap'\n    },\n    data: state.selectedObject.results,\n    renderItem: function renderItem(item) {\n      return _jsx(CardFrame, _objectSpread(_objectSpread({}, item), {}, {\n        workType: state.selectedWorkType,\n        onPress: function onPress() {\n          alert(JSON.stringify(item));\n        }\n      }), item.id);\n    },\n    ListEmptyComponent: _jsx(View, {\n      children: _jsx(Text, {\n        children: \" no item to render\"\n      })\n    }),\n    horizontal: false\n  }, function (item) {\n    return item.id;\n  });\n};\nexport default FlatListView;","map":{"version":3,"names":["StatusBar","React","useLayoutEffect","react","Component","StyleSheet","Text","View","TouchableOpacity","Modal","FlatList","ActivityIndicator","SafeAreaView","Dimensions","axios","CardFrame","Styles","Header","Profile","ButtonTypeRadio","ModalView","Colors","useSelector","jsx","_jsx","FlatListView","props","state","alert","JSON","stringify","keyExtractor","item","id","contentContainerStyle","justifyContent","flexDirection","flexWrap","data","selectedObject","results","renderItem","_objectSpread","workType","selectedWorkType","onPress","ListEmptyComponent","children","horizontal"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/customComponent/FlatLIstView.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useLayoutEffect} from 'react';\nimport react, { Component } from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Modal, FlatList, ActivityIndicator,SafeAreaView,Dimensions} from 'react-native';\nimport axios from \"axios\";\n//import { useInfiniteQuery } from 'react-query';\n\nimport CardFrame from './cardFrame';\nimport Styles from '../constant/GlobalStyles'\nimport Header from './Header';\nimport Profile from './Profile';\nimport ButtonTypeRadio from './ButtonTypeRadio';\nimport ModalView from './ModalView';\n\n\nimport Colors from '../constant/color'\nimport { useSelector } from 'react-redux';\n\nconst FlatListView=(props)=>{\n    const state = useSelector((state) => state);\n    alert(\"state in flatlist\"+JSON.stringify(state));\n    return(\n        <FlatList\n                    //ref={this.flatListRef}\n                    keyExtractor={(item) => item.id}\n                    key={(item)=>item.id}\n                    contentContainerStyle={{ justifyContent: 'center', flexDirection: 'row', flexWrap: 'wrap' }}\n                    data={state.selectedObject.results}\n                    renderItem={(item)=><CardFrame key={item.id} {...item} workType={state.selectedWorkType} onPress={()=>{alert(JSON.stringify(item))}}/>}\n                 //  renderItem={(item)=><View><Text>{item.id}</Text></View>}\n                   ListEmptyComponent={<View><Text> no item to render</Text></View>}\n                  // hasMore={state.language.finalObject[state.language.selectedLanguage.key][state.language.selectedWorkType].hasMore}\n                   /*onEndReached={\n                     state.language.finalObject[state.language.selectedLanguage.key][state.language.selectedWorkType].hasMore?\n                     handleScroll.bind(this)\n                    :\n                    \"\"\n                   }\n                   onEndReachedThreshold={\n                     this.state.itemToRender[state.language.selectedLanguage.key][this.state.language.selectedWorkType].hasMore?\n                    0.2\n                    :\n                    0\n                    }\n                    */\n                    //refreshing={refreshing}\n                    horizontal={false}\n                    //onEndReached={this.handleScroll.bind(this)}\n                   // refreshing={this.state.refreshing}\n                 //  getItemLayout={(any,number) => ( {length: 200,offset:(250*((number-1)/numberOfColumn)), index: number})}\n                    //initialScrollIndex={0}\n                  //  initialScrollIndex={this.state.itemToRender[this.state.workType][this.state.selectedLanguage.key].scrollIndex}\n                    //scrollEnabled={true}\n                   // onScroll={this.handleScroll1.bind(this)}\n                   // maxToRenderPerBatch={10}\n                   // numColumns={2}\n                   // style={{width:'100%',flexGrow:1}}\n                    //onMomentumScrollBegin={() => {this.onEndReachedCalledDuringMomentum = false;}}\n                    />\n    )\n}\n\nexport default FlatListView"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAEC,eAAe,QAAO,OAAO;AAC3C,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAGhB,OAAOC,MAAM;AACb,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE1C,IAAMC,YAAY,GAAC,SAAbA,YAAYA,CAAEC,KAAK,EAAG;EACxB,IAAMC,KAAK,GAAGL,WAAW,CAAC,UAACK,KAAK;IAAA,OAAKA,KAAK;EAAA,EAAC;EAC3CC,KAAK,CAAC,mBAAmB,GAACC,IAAI,CAACC,SAAS,CAACH,KAAK,CAAC,CAAC;EAChD,OACIH,IAAA,CAACd,QAAQ;IAEGqB,YAAY,EAAE,SAAAA,aAACC,IAAI;MAAA,OAAKA,IAAI,CAACC,EAAE;IAAA,CAAC;IAEhCC,qBAAqB,EAAE;MAAEC,cAAc,EAAE,QAAQ;MAAEC,aAAa,EAAE,KAAK;MAAEC,QAAQ,EAAE;IAAO,CAAE;IAC5FC,IAAI,EAAEX,KAAK,CAACY,cAAc,CAACC,OAAQ;IACnCC,UAAU,EAAE,SAAAA,WAACT,IAAI;MAAA,OAAGR,IAAA,CAACT,SAAS,EAAA2B,aAAA,CAAAA,aAAA,KAAmBV,IAAI;QAAEW,QAAQ,EAAEhB,KAAK,CAACiB,gBAAiB;QAACC,OAAO,EAAE,SAAAA,QAAA,EAAI;UAACjB,KAAK,CAACC,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;QAAA;MAAE,IAAhGA,IAAI,CAACC,EAA4F,CAAC;IAAA,CAAC;IAExIa,kBAAkB,EAAEtB,IAAA,CAACjB,IAAI;MAAAwC,QAAA,EAACvB,IAAA,CAAClB,IAAI;QAAAyC,QAAA,EAAC;MAAkB,CAAM;IAAC,CAAM,CAAE;IAgBhEC,UAAU,EAAE;EAAM,GArBb,UAAChB,IAAI;IAAA,OAAGA,IAAI,CAACC,EAAE;EAAA,CAiCnB,CAAC;AAEtB,CAAC;AAED,eAAeR,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}