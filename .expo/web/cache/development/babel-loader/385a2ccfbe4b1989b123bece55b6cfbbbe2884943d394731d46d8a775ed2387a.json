{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { SETLANGUAGE } from \"../actions/type\";\nimport fetchReducer from \"./fetch\";\nimport workTypeReducer from \"./worktype\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nvar dataReducer = combineReducers({\n  workTypeReducer: workTypeReducer\n});\nvar languageReducer = function languageReducer(state, action) {\n  var type = action.type,\n    payload = action.payload;\n  switch (type) {\n    case SETLANGUAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedLanguageIndex: payload.index,\n        selectedWorkType: \"Pending\"\n      });\n    default:\n      return dataReducer;\n  }\n};\nexport default languageReducer;","map":{"version":3,"names":["SETLANGUAGE","fetchReducer","workTypeReducer","combineReducers","configureStore","dataReducer","languageReducer","state","action","type","payload","_objectSpread","selectedLanguageIndex","index","selectedWorkType"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/reducers/languages.js"],"sourcesContent":["import { SETLANGUAGE } from \"../actions/type\";\r\nimport fetchReducer from \"./fetch\";\r\nimport workTypeReducer from \"./worktype\";\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\r\n\r\n//const user = null;\r\nconst dataReducer = combineReducers({\r\n  workTypeReducer:workTypeReducer,\r\n  \r\n  \r\n});\r\n\r\n const languageReducer= (state, action) => {\r\n  const { type, payload } = action;\r\n  \r\nswitch (type) {\r\n  case SETLANGUAGE:\r\n    return{\r\n      ...state, \r\n      selectedLanguageIndex:payload.index,\r\n      selectedWorkType:\"Pending\",\r\n    };\r\n    default:\r\n      return dataReducer;\r\n  }\r\n};\r\nexport default languageReducer\r\n\r\n"],"mappings":";;;AAAA,SAASA,WAAW;AACpB,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,SAASC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAGlE,IAAMC,WAAW,GAAGF,eAAe,CAAC;EAClCD,eAAe,EAACA;AAGlB,CAAC,CAAC;AAED,IAAMI,eAAe,GAAE,SAAjBA,eAAeA,CAAGC,KAAK,EAAEC,MAAM,EAAK;EACzC,IAAQC,IAAI,GAAcD,MAAM,CAAxBC,IAAI;IAAEC,OAAO,GAAKF,MAAM,CAAlBE,OAAO;EAEvB,QAAQD,IAAI;IACV,KAAKT,WAAW;MACd,OAAAW,aAAA,CAAAA,aAAA,KACKJ,KAAK;QACRK,qBAAqB,EAACF,OAAO,CAACG,KAAK;QACnCC,gBAAgB,EAAC;MAAS;IAE5B;MACE,OAAOT,WAAW;EACtB;AACF,CAAC;AACD,eAAeC,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}