{"ast":null,"code":"import { LOAD_PARA, LOAD_JOB, INITIALIZE } from \"./type\";\nimport DataFetchService from \"../services/dataFetchService\";\nexport var initialize = function initialize(languages) {\n  return function (dispatch) {\n    dispatch({\n      type: INITIALIZE,\n      payload: languages\n    });\n  };\n};\nexport var getJob = function getJob(oldState, workType, selectedLanguageIndex) {\n  return function (dispatch) {\n    return DataFetchService.getJob(oldState, workType, selectedLanguageIndex).then(function (response) {\n      alert(JSON.stringify(response));\n      if (response.status === 200) {\n        var user = response.data.user;\n        alert(JSON.stringify(user));\n        dispatch({\n          type: LOAD_JOB,\n          payload: response\n        });\n      }\n      Promise.resolve();\n      return response;\n    }, function (error) {\n      Promise.reject();\n      return error;\n    });\n  };\n};\nexport var getParagraph = function getParagraph(oldState, workType, selectedLanguageIndex) {\n  return function (dispatch) {\n    return DataFetchService.getParagraph(oldState, workType, selectedLanguageIndex).then(function (response) {\n      alert(JSON.stringify(response));\n      if (response.status === 200) {\n        var languages = getLanguages(oldState, workType, selectedLanguageIndex, response);\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            languages: languages\n          }\n        });\n      }\n      Promise.resolve();\n      return response;\n    }, function (error) {});\n  };\n};","map":{"version":3,"names":["LOAD_PARA","LOAD_JOB","INITIALIZE","DataFetchService","initialize","languages","dispatch","type","payload","getJob","oldState","workType","selectedLanguageIndex","then","response","alert","JSON","stringify","status","user","data","Promise","resolve","error","reject","getParagraph","getLanguages"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/actions/fetch.js"],"sourcesContent":["import { LOAD_PARA,LOAD_JOB,INITIALIZE } from \"./type\";\r\nimport DataFetchService from \"../services/dataFetchService\";\r\nexport const initialize=(languages)=>(dispatch)=>{\r\n    dispatch({\r\n        type: INITIALIZE,\r\n        payload: languages \r\n      })\r\n}\r\n\r\nexport const getJob = (oldState,workType,selectedLanguageIndex) => (dispatch) => {\r\n  return DataFetchService.getJob(oldState,workType,selectedLanguageIndex).then(\r\n    (response) => {\r\n      alert(JSON.stringify(response));\r\n      if (response.status===200) {\r\n        const user=response.data.user;\r\n        alert(JSON.stringify(user));\r\n        dispatch({\r\n          type: LOAD_JOB,\r\n          payload: response \r\n        });\r\n      }\r\n  \r\n        Promise.resolve();\r\n        return response;\r\n\r\n      }\r\n    ,\r\n    (error) => {\r\nPromise.reject();\r\n\r\n      return error;\r\n    }\r\n  );\r\n};\r\nexport const getParagraph = (oldState,workType,selectedLanguageIndex) => (dispatch) => {\r\n    return DataFetchService.getParagraph(oldState,workType,selectedLanguageIndex).then(\r\n      (response) => {\r\n        alert(JSON.stringify(response));\r\n        \r\n        if (response.status===200) {\r\n        //  const user=response.data.user;\r\n         // alert(JSON.stringify(user));\r\n         const languages=getLanguages(oldState,workType,selectedLanguageIndex,response);\r\n          dispatch({\r\n            type: LOAD_PARA,\r\n            payload: {languages:languages}\r\n          });\r\n        }\r\n\r\n          Promise.resolve();\r\n          return response;\r\n  \r\n        }\r\n      ,\r\n      (error) => {\r\n \r\n  //Promise.reject();\r\n  \r\n        //return error;\r\n      }\r\n    );\r\n  };\r\n\r\n  "],"mappings":"AAAA,SAASA,SAAS,EAACC,QAAQ,EAACC,UAAU;AACtC,OAAOC,gBAAgB;AACvB,OAAO,IAAMC,UAAU,GAAC,SAAXA,UAAUA,CAAEC,SAAS;EAAA,OAAG,UAACC,QAAQ,EAAG;IAC7CA,QAAQ,CAAC;MACLC,IAAI,EAAEL,UAAU;MAChBM,OAAO,EAAEH;IACX,CAAC,CAAC;EACR,CAAC;AAAA;AAED,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAMA,CAAIC,QAAQ,EAACC,QAAQ,EAACC,qBAAqB;EAAA,OAAK,UAACN,QAAQ,EAAK;IAC/E,OAAOH,gBAAgB,CAACM,MAAM,CAACC,QAAQ,EAACC,QAAQ,EAACC,qBAAqB,CAAC,CAACC,IAAI,CAC1E,UAACC,QAAQ,EAAK;MACZC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MAC/B,IAAIA,QAAQ,CAACI,MAAM,KAAG,GAAG,EAAE;QACzB,IAAMC,IAAI,GAACL,QAAQ,CAACM,IAAI,CAACD,IAAI;QAC7BJ,KAAK,CAACC,IAAI,CAACC,SAAS,CAACE,IAAI,CAAC,CAAC;QAC3Bb,QAAQ,CAAC;UACPC,IAAI,EAAEN,QAAQ;UACdO,OAAO,EAAEM;QACX,CAAC,CAAC;MACJ;MAEEO,OAAO,CAACC,OAAO,CAAC,CAAC;MACjB,OAAOR,QAAQ;IAEjB,CAAC,EAEH,UAACS,KAAK,EAAK;MACfF,OAAO,CAACG,MAAM,CAAC,CAAC;MAEV,OAAOD,KAAK;IACd,CACF,CAAC;EACH,CAAC;AAAA;AACD,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAYA,CAAIf,QAAQ,EAACC,QAAQ,EAACC,qBAAqB;EAAA,OAAK,UAACN,QAAQ,EAAK;IACnF,OAAOH,gBAAgB,CAACsB,YAAY,CAACf,QAAQ,EAACC,QAAQ,EAACC,qBAAqB,CAAC,CAACC,IAAI,CAChF,UAACC,QAAQ,EAAK;MACZC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACH,QAAQ,CAAC,CAAC;MAE/B,IAAIA,QAAQ,CAACI,MAAM,KAAG,GAAG,EAAE;QAG1B,IAAMb,SAAS,GAACqB,YAAY,CAAChB,QAAQ,EAACC,QAAQ,EAACC,qBAAqB,EAACE,QAAQ,CAAC;QAC7ER,QAAQ,CAAC;UACPC,IAAI,EAAEP,SAAS;UACfQ,OAAO,EAAE;YAACH,SAAS,EAACA;UAAS;QAC/B,CAAC,CAAC;MACJ;MAEEgB,OAAO,CAACC,OAAO,CAAC,CAAC;MACjB,OAAOR,QAAQ;IAEjB,CAAC,EAEH,UAACS,KAAK,EAAK,CAKX,CACF,CAAC;EACH,CAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}