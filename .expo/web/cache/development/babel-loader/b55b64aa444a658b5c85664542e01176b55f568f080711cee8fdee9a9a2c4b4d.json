{"ast":null,"code":"import _readOnlyError from \"@babel/runtime/helpers/readOnlyError\";\nimport { LOGIN_SUCCESS, LOGOUT, ONLOAD, INITIALIZE, LOAD_PARA } from \"./type\";\nimport AuthService from \"../services/authService\";\nimport dataFetchService from \"../services/dataFetchService\";\nimport globalconst from \"../constant/globalvariables\";\nimport { initialize, getParagraph } from \"./fetch\";\nexport var login = function login(user) {\n  return function (dispatch) {\n    return AuthService.logIn(user).then(function (response) {\n      return new Promise(function (res, rej, response) {\n        var apiURL = \"\";\n        if (response.status == 200) {\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {\n              user: response.bhaashadan.user,\n              data: {\n                next: apiURL\n              }\n            }\n          });\n          globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.data.user.languages[0].key + \"&page=1\", _readOnlyError(\"apiURL\");\n          res(dataFetchService.getParagraph({\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            nextUrl: apiURL\n          }));\n        }\n      }).then(function (paraResponse) {\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false,\n            nextUrl: globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.data.user.languages[0].key + \"&page=1\"\n          }\n        });\n        return {\n          loginResponse: response,\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: error\n        };\n      });\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    return AuthService.logOut().then(function (response) {\n      if (response.status === \"success\") {\n        dispatch({\n          type: LOGOUT,\n          payload: {\n            user: null\n          }\n        });\n        Promise.resolve();\n        return response;\n      }\n    });\n  };\n};\nexport var onLoad = function onLoad(user) {\n  return function (dispatch) {\n    return AuthService.onLoad(user).then(function (response) {\n      return new Promise(function (resolvefn, rejectfn, response) {\n        var apiURL = \"\";\n        if (response && response.bhaashadan) {\n          globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.bhaashadan.user.languages[0].key + \"&page=1\", _readOnlyError(\"apiURL\");\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {\n              user: response.bhaashadan.user,\n              data: {\n                next: apiURL\n              }\n            }\n          });\n          resolvefn(dataFetchService.getParagraph({\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            nextUrl: apiURL\n          }));\n        }\n      }).then(function (paraResponse) {\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false,\n            nextUrl: apiURL\n          }\n        });\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        return error;\n      });\n    });\n  };\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","ONLOAD","INITIALIZE","LOAD_PARA","AuthService","dataFetchService","globalconst","initialize","getParagraph","login","user","dispatch","logIn","then","response","Promise","res","rej","apiURL","status","type","payload","bhaashadan","data","next","apiBaseUrl","languages","key","_readOnlyError","selectedLanguage","selectedWorkType","nextUrl","paraResponse","alreadyExists","loginResponse","catch","error","logout","logOut","resolve","onLoad","resolvefn","rejectfn"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/actions/auth.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT,ONLOAD,INITIALIZE, LOAD_PARA } from \"./type\";\r\nimport AuthService from \"../services/authService\";\r\nimport dataFetchService from \"../services/dataFetchService\";\r\nimport globalconst from \"../constant/globalvariables\";\r\nimport { initialize,getParagraph } from \"./fetch\";\r\n/*\r\nexport const login = (user) => () => {\r\n  return function (dispatch){\r\n    AuthService.logIn(user).then(\r\n      (response) => {\r\n        \r\n        alert(JSON.stringify(response));\r\n        if (response.status===200) {\r\n          localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\r\n          const user=response.data.user;\r\n          alert(JSON.stringify(user));\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.data.user }\r\n  \r\n          })\r\n  \r\n         dispatch(getParagraph({selectedLanguageKey:response.data.user.languages[0].key,workType:\"Pending\"}));\r\n          \r\n  \r\n        }\r\n  \r\n          Promise.resolve();\r\n          return response\r\n  \r\n        }\r\n      ,\r\n      (error) => {\r\n  \r\n  Promise.reject();\r\n  \r\n        return error;\r\n      }\r\n    );\r\n  }\r\n}\r\n*/\r\nexport const login = (user) => (dispatch) => {\r\n   \r\n  return AuthService.logIn(user).then(\r\n    (response) => {\r\n     // const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\";\r\n      //alert(\"login service\"+JSON.stringify(response));\r\n \r\n        return new Promise(function(res, rej,response){\r\n          const apiURL=\"\";\r\n          if(response.status==200){\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.bhaashadan.user,data:{next:apiURL}}\r\n  \r\n          });\r\n          \r\n            apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\";\r\n          res(dataFetchService.getParagraph({selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",nextUrl:apiURL}));\r\n         }\r\n         // else\r\n           // rej({loginResponse:response,paraResponse:\"Not called\"});\r\n      }).then((paraResponse) =>  {\r\n       // alert(\"paraResponse\"+paraResponse);\r\n        dispatch({\r\n        type: LOAD_PARA,\r\n        payload: {selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false,\r\n        nextUrl:globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\" }\r\n\r\n      })\r\n    return {loginResponse:response,paraResponse:paraResponse}\r\n    }\r\n    \r\n    ).catch((error)=>{\r\n      return {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:error};\r\n    })\r\n  \r\n}\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  return AuthService.logOut().then((response) => {\r\n    if (response.status === \"success\") {\r\n      \r\n      dispatch({\r\n        type: LOGOUT,\r\n        payload:{user:null}\r\n      });\r\n      \r\n      Promise.resolve();\r\n      return response;\r\n    }\r\n  });\r\n};\r\n\r\nexport const onLoad = (user) => (dispatch) => {\r\n  return  AuthService.onLoad(user).then((response) => {\r\n   // let userObj=response;\r\n   //const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\r\n    return new Promise(function(resolvefn, rejectfn,response){\r\n      //alert(\"resolvefn\"+JSON.stringify(resolvefn)+ \" rejectfn \"+JSON.stringify(rejectfn));\r\n      const apiURL=\"\";\r\n      if(response && response.bhaashadan )\r\n      {\r\n         apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {user:response.bhaashadan.user,data:{next:apiURL}}\r\n\r\n      });\r\n    //  if(resolvefn)\r\n    //const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\r\n     resolvefn(dataFetchService.getParagraph({selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",nextUrl:apiURL}));\r\n      }\r\n     // else\r\n     // rejectfn( response);\r\n  }).then((paraResponse) =>  {\r\n    //alert(\"paraResponse\"+paraResponse);\r\n    dispatch({\r\n    type: LOAD_PARA,\r\n    payload: {selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false,\r\n    nextUrl: apiURL}\r\n    //globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\"\r\n\r\n  })\r\nreturn {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:paraResponse}\r\n}).catch(error=>{\r\n  return error;\r\n}\r\n\r\n)\r\n\r\n\r\n\r\n  });\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}