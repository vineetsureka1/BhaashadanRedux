{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT, ONLOAD, INITIALIZE, LOAD_PARA } from \"./type\";\nimport AuthService from \"../services/authService\";\nimport dataFetchService from \"../services/dataFetchService\";\nimport { initialize, getParagraph } from \"./fetch\";\nexport var login = function login(user) {\n  return function (dispatch) {\n    return AuthService.logIn(user).then(function (response) {\n      alert(\"login service\" + JSON.stringify(response));\n      {}\n      return new Promise(function (res, rej) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            user: response.data.user\n          }\n        });\n        res(dataFetchService.getParagraph({\n          selectedLanguage: response.data.user.languages[0],\n          selectedWorkType: \"Pending\",\n          url: \"url\"\n        }));\n      }).then(function (paraResponse) {\n        alert(\"paraResponse\" + paraResponse);\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false\n          }\n        });\n        return {\n          loginResponse: response,\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        Promise.reject();\n        return error;\n      });\n    }, function (error) {\n      Promise.reject();\n      return error;\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    return AuthService.logOut().then(function (response) {\n      if (response.status === \"success\") {\n        dispatch({\n          type: LOGOUT,\n          payload: {\n            user: null\n          }\n        });\n        Promise.resolve();\n        return response;\n      }\n    });\n  };\n};\nexport var onLoad = function onLoad(user) {\n  return function (dispatch) {\n    return AuthService.onLoad(user).then(function (response) {\n      return new Promise(function (res, rej) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            user: response.bhaashadan.user\n          }\n        });\n        res(dataFetchService.getParagraph({\n          selectedLanguage: response.bhaashadan.user.languages[0],\n          selectedWorkType: \"Pending\",\n          url: \"url\"\n        }));\n      }).then(function (paraResponse) {\n        alert(\"paraResponse\" + paraResponse);\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false\n          }\n        });\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        Promise.reject();\n        return error;\n      });\n    });\n  };\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","ONLOAD","INITIALIZE","LOAD_PARA","AuthService","dataFetchService","initialize","getParagraph","login","user","dispatch","logIn","then","response","alert","JSON","stringify","Promise","res","rej","type","payload","data","selectedLanguage","languages","selectedWorkType","url","paraResponse","alreadyExists","loginResponse","catch","error","reject","logout","logOut","status","resolve","onLoad","bhaashadan"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/actions/auth.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT,ONLOAD,INITIALIZE, LOAD_PARA } from \"./type\";\r\nimport AuthService from \"../services/authService\";\r\nimport dataFetchService from \"../services/dataFetchService\";\r\nimport { initialize,getParagraph } from \"./fetch\";\r\n/*\r\nexport const login = (user) => () => {\r\n  return function (dispatch){\r\n    AuthService.logIn(user).then(\r\n      (response) => {\r\n        \r\n        alert(JSON.stringify(response));\r\n        if (response.status===200) {\r\n          localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\r\n          const user=response.data.user;\r\n          alert(JSON.stringify(user));\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.data.user }\r\n  \r\n          })\r\n  \r\n         dispatch(getParagraph({selectedLanguageKey:response.data.user.languages[0].key,workType:\"Pending\"}));\r\n          \r\n  \r\n        }\r\n  \r\n          Promise.resolve();\r\n          return response\r\n  \r\n        }\r\n      ,\r\n      (error) => {\r\n  \r\n  Promise.reject();\r\n  \r\n        return error;\r\n      }\r\n    );\r\n  }\r\n}\r\n*/\r\nexport const login = (user) => (dispatch) => {\r\n  \r\n  return AuthService.logIn(user).then(\r\n    (response) => {\r\n      \r\n      alert(\"login service\"+JSON.stringify(response));\r\n     // if (response.status===200) \r\n      {\r\n       // localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\r\n        //const user=response.data.user;\r\n       // alert(JSON.stringify(user));\r\n       /* dispatch({\r\n          type: LOGIN_SUCCESS,\r\n          payload: {user:response.data.user }\r\n\r\n        })*/\r\n\r\n       //let paraResponse={()=>dataFetchService.getParagraph(`Token ${response.data.token}`)};\r\n        \r\n\r\n      }\r\n\r\n        //Promise.resolve();\r\n        //return response\r\n        \r\n        return new Promise(function(res, rej){\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.data.user }\r\n  \r\n          });\r\n          res(dataFetchService.getParagraph({selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",url:\"url\"}));\r\n      }).then((paraResponse) =>  {\r\n        alert(\"paraResponse\"+paraResponse);\r\n        dispatch({\r\n        type: LOAD_PARA,\r\n        payload: {selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false }\r\n\r\n      })\r\n    return {loginResponse:response,paraResponse:paraResponse}\r\n    }\r\n    \r\n    ).catch((error)=>{\r\n      Promise.reject();\r\n      return error;\r\n    })\r\n  \r\n}\r\n\r\n      \r\n    ,\r\n    (error) => {\r\n\r\nPromise.reject();\r\n\r\n      return error;\r\n    }\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  return AuthService.logOut().then((response) => {\r\n    if (response.status === \"success\") {\r\n      \r\n      dispatch({\r\n        type: LOGOUT,\r\n        payload:{user:null}\r\n      });\r\n      \r\n      Promise.resolve();\r\n      return response;\r\n    }\r\n  });\r\n};\r\n\r\nexport const onLoad = (user) => (dispatch) => {\r\n  return  AuthService.onLoad(user).then((response) => {\r\n   // let userObj=response;\r\n    return new Promise(function(res, rej){\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {user:response.bhaashadan.user }\r\n\r\n      });\r\n      res(dataFetchService.getParagraph({selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",url:\"url\"}));\r\n  }).then((paraResponse) =>  {\r\n    alert(\"paraResponse\"+paraResponse);\r\n    dispatch({\r\n    type: LOAD_PARA,\r\n    payload: {selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false }\r\n\r\n  })\r\nreturn {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:paraResponse}\r\n}\r\n\r\n).catch((error)=>{\r\n  Promise.reject();\r\n  return error;\r\n})\r\n  });\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}