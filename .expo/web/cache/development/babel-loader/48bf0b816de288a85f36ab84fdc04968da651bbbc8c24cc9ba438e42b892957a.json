{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { setSelectedLanguage } from \"../actions/fetch\";\nimport { SETLANGUAGE, ONLOAD, LOGIN_SUCCESS, LOAD_PARA, SETWORKTYPE } from \"../actions/type\";\nimport fetchReducer from \"./fetch\";\nimport workTypeReducer from \"./worktype\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nvar initialState = [];\nvar languageReducer = function languageReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n    payload = action.payload;\n  switch (type) {\n    case LOGIN_SUCCESS:\n      return [].concat(_toConsumableArray(state), _toConsumableArray(payload.user.languages));\n    case SETWORKTYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedLanguage: payload.selectedLanguage\n      });\n    default:\n      return state;\n  }\n};\nexport default languageReducer;","map":{"version":3,"names":["setSelectedLanguage","SETLANGUAGE","ONLOAD","LOGIN_SUCCESS","LOAD_PARA","SETWORKTYPE","fetchReducer","workTypeReducer","combineReducers","configureStore","initialState","languageReducer","state","arguments","length","undefined","action","type","payload","concat","_toConsumableArray","user","languages","_objectSpread","selectedLanguage"],"sources":["C:/Users/vinee/Desktop/BhaashadanRedux/src/reducers/languages.js"],"sourcesContent":["import { setSelectedLanguage } from \"../actions/fetch\";\r\nimport { SETLANGUAGE,ONLOAD,LOGIN_SUCCESS, LOAD_PARA, SETWORKTYPE } from \"../actions/type\";\r\nimport fetchReducer from \"./fetch\";\r\nimport workTypeReducer from \"./worktype\";\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\r\n\r\n//const user = null;\r\n\r\nconst initialState=[]\r\n const languageReducer= (state=initialState, action) => {\r\n  const { type, payload } = action;\r\n  switch (type) {\r\n\r\n      case LOGIN_SUCCESS:\r\n  \r\n      return [...state,...payload.user.languages];  \r\n      case SETWORKTYPE:\r\n        return{...state,\r\n          selectedLanguage:payload.selectedLanguage}\r\n      \r\n default:\r\n  return state;\r\n}  \r\n};\r\n/*\r\nfunction languageReducer(state, action) {\r\n    const intermediateState = dataReducer(state, action)\r\n    const finalState = workTypeReducer(intermediateState, action)\r\n    return finalState\r\n  }\r\n  */\r\n  \r\nexport default languageReducer"],"mappings":";;;;AAAA,SAASA,mBAAmB;AAC5B,SAASC,WAAW,EAACC,MAAM,EAACC,aAAa,EAAEC,SAAS,EAAEC,WAAW;AACjE,OAAOC,YAAY;AACnB,OAAOC,eAAe;AACtB,SAASC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAIlE,IAAMC,YAAY,GAAC,EAAE;AACpB,IAAMC,eAAe,GAAE,SAAjBA,eAAeA,CAAA,EAAkC;EAAA,IAA/BC,KAAK,GAAAC,SAAA,CAAAC,MAAA,QAAAD,SAAA,QAAAE,SAAA,GAAAF,SAAA,MAACH,YAAY;EAAA,IAAEM,MAAM,GAAAH,SAAA,CAAAC,MAAA,OAAAD,SAAA,MAAAE,SAAA;EACjD,IAAQE,IAAI,GAAcD,MAAM,CAAxBC,IAAI;IAAEC,OAAO,GAAKF,MAAM,CAAlBE,OAAO;EACrB,QAAQD,IAAI;IAER,KAAKd,aAAa;MAElB,UAAAgB,MAAA,CAAAC,kBAAA,CAAWR,KAAK,GAAAQ,kBAAA,CAAIF,OAAO,CAACG,IAAI,CAACC,SAAS;IAC1C,KAAKjB,WAAW;MACd,OAAAkB,aAAA,CAAAA,aAAA,KAAUX,KAAK;QACbY,gBAAgB,EAACN,OAAO,CAACM;MAAgB;IAElD;MACC,OAAOZ,KAAK;EACd;AACA,CAAC;AASD,eAAeD,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}