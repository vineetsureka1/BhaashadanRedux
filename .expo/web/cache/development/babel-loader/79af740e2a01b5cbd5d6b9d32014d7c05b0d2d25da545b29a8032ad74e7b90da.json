{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT, ONLOAD, INITIALIZE, LOAD_PARA } from \"./type\";\nimport AuthService from \"../services/authService\";\nimport dataFetchService from \"../services/dataFetchService\";\nimport globalconst from \"../constant/globalvariables\";\nimport { initialize, getParagraph } from \"./fetch\";\nexport var login = function login(user) {\n  return function (dispatch) {\n    return AuthService.logIn(user).then(function (response) {\n      var apiURL = globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.data.user.languages[0].key + \"&page=1\";\n      alert(\"login service\" + JSON.stringify(response));\n      return new Promise(function (res, rej) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            user: response.bhaashadan.user,\n            data: {\n              next: apiURL\n            }\n          }\n        });\n        if (response.status == 200) {\n          res(dataFetchService.getParagraph({\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            nextUrl: apiURL\n          }));\n        } else rej({\n          loginResponse: response,\n          paraResponse: \"Not called\"\n        });\n      }).then(function (paraResponse) {\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false,\n            nextUrl: globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.data.user.languages[0].key + \"&page=1\"\n          }\n        });\n        return {\n          loginResponse: response,\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: error\n        };\n      });\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    return AuthService.logOut().then(function (response) {\n      if (response.status === \"success\") {\n        dispatch({\n          type: LOGOUT,\n          payload: {\n            user: null\n          }\n        });\n        Promise.resolve();\n        return response;\n      }\n    });\n  };\n};\nexport var onLoad = function onLoad(user) {\n  return function (dispatch) {\n    return AuthService.onLoad(user).then(function (response) {\n      return new Promise(function (resolvefn, rejectfn) {\n        {\n          var apiURL = globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.bhaashadan.user.languages[0].key + \"&page=1\";\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {\n              user: response.bhaashadan.user,\n              data: {\n                next: apiURL\n              }\n            }\n          });\n          resolvefn(dataFetchService.getParagraph({\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            nextUrl: apiURL\n          }));\n        }\n      }).then(function (paraResponse) {\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false,\n            nextUrl: globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.bhaashadan.user.languages[0].key + \"&page=1\"\n          }\n        });\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        return error;\n      });\n    });\n  };\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","ONLOAD","INITIALIZE","LOAD_PARA","AuthService","dataFetchService","globalconst","initialize","getParagraph","login","user","dispatch","logIn","then","response","apiURL","apiBaseUrl","data","languages","key","alert","JSON","stringify","Promise","res","rej","type","payload","bhaashadan","next","status","selectedLanguage","selectedWorkType","nextUrl","loginResponse","paraResponse","alreadyExists","catch","error","logout","logOut","resolve","onLoad","resolvefn","rejectfn"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/actions/auth.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT,ONLOAD,INITIALIZE, LOAD_PARA } from \"./type\";\r\nimport AuthService from \"../services/authService\";\r\nimport dataFetchService from \"../services/dataFetchService\";\r\nimport globalconst from \"../constant/globalvariables\";\r\nimport { initialize,getParagraph } from \"./fetch\";\r\n/*\r\nexport const login = (user) => () => {\r\n  return function (dispatch){\r\n    AuthService.logIn(user).then(\r\n      (response) => {\r\n        \r\n        alert(JSON.stringify(response));\r\n        if (response.status===200) {\r\n          localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\r\n          const user=response.data.user;\r\n          alert(JSON.stringify(user));\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.data.user }\r\n  \r\n          })\r\n  \r\n         dispatch(getParagraph({selectedLanguageKey:response.data.user.languages[0].key,workType:\"Pending\"}));\r\n          \r\n  \r\n        }\r\n  \r\n          Promise.resolve();\r\n          return response\r\n  \r\n        }\r\n      ,\r\n      (error) => {\r\n  \r\n  Promise.reject();\r\n  \r\n        return error;\r\n      }\r\n    );\r\n  }\r\n}\r\n*/\r\nexport const login = (user) => (dispatch) => {\r\n   \r\n  return AuthService.logIn(user).then(\r\n    (response) => {\r\n      const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\";\r\n      alert(\"login service\"+JSON.stringify(response));\r\n \r\n        return new Promise(function(res, rej){\r\n         // const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\";\r\n          dispatch({\r\n            type: LOGIN_SUCCESS,\r\n            payload: {user:response.bhaashadan.user,data:{next:apiURL}}\r\n  \r\n          });\r\n          if(response.status==200){\r\n          \r\n          res(dataFetchService.getParagraph({selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",nextUrl:apiURL}));\r\n          }\r\n          else\r\n            rej({loginResponse:response,paraResponse:\"Not called\"});\r\n      }).then((paraResponse) =>  {\r\n       // alert(\"paraResponse\"+paraResponse);\r\n        dispatch({\r\n        type: LOAD_PARA,\r\n        payload: {selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false,\r\n        nextUrl:globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\" }\r\n\r\n      })\r\n    return {loginResponse:response,paraResponse:paraResponse}\r\n    }\r\n    \r\n    ).catch((error)=>{\r\n      return {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:error};\r\n    })\r\n  \r\n}\r\n  );\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  return AuthService.logOut().then((response) => {\r\n    if (response.status === \"success\") {\r\n      \r\n      dispatch({\r\n        type: LOGOUT,\r\n        payload:{user:null}\r\n      });\r\n      \r\n      Promise.resolve();\r\n      return response;\r\n    }\r\n  });\r\n};\r\n\r\nexport const onLoad = (user) => (dispatch) => {\r\n  return  AuthService.onLoad(user).then((response) => {\r\n   // let userObj=response;\r\n    return new Promise(function(resolvefn, rejectfn){\r\n      //alert(\"resolvefn\"+JSON.stringify(resolvefn)+ \" rejectfn \"+JSON.stringify(rejectfn));\r\n     // if(response && response.bhaashadan )\r\n      {\r\n        const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: {user:response.bhaashadan.user,data:{next:apiURL}}\r\n\r\n      });\r\n    //  if(resolvefn)\r\n    //const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\r\n     resolvefn(dataFetchService.getParagraph({selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",nextUrl:apiURL}));\r\n      }\r\n     // else\r\n     // rejectfn( response);\r\n  }).then((paraResponse) =>  {\r\n    //alert(\"paraResponse\"+paraResponse);\r\n    dispatch({\r\n    type: LOAD_PARA,\r\n    payload: {selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false,\r\n    nextUrl:globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\" }\r\n\r\n  })\r\nreturn {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:paraResponse}\r\n}).catch(error=>{\r\n  return error;\r\n}\r\n\r\n)\r\n\r\n\r\n\r\n  });\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}