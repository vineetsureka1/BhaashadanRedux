{"ast":null,"code":"import { LOGIN_SUCCESS, LOGOUT, ONLOAD, INITIALIZE, LOAD_PARA } from \"./type\";\nimport AuthService from \"../services/authService\";\nimport dataFetchService from \"../services/dataFetchService\";\nimport globalconst from \"../constant/globalvariables\";\nimport { initialize, getParagraph } from \"./fetch\";\nexport var login = function login(user) {\n  return function (dispatch) {\n    return AuthService.logIn(user).then(function (response) {\n      var apiURL = globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.data.user.languages[0].key + \"&page=1\";\n      alert(\"login service\" + JSON.stringify(response));\n      return new Promise(function (res, rej) {\n        dispatch({\n          type: LOGIN_SUCCESS,\n          payload: {\n            user: response.data.user,\n            data: {\n              next: apiURL\n            }\n          }\n        });\n        if (response.status == 200) {\n          res(dataFetchService.getParagraph({\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            nextUrl: null\n          }));\n        } else rej({\n          loginResponse: response,\n          paraResponse: \"Not called\"\n        });\n      }).then(function (paraResponse) {\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.data.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false,\n            nextUrl: paraResponse.data.next\n          }\n        });\n        return {\n          loginResponse: response,\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: error\n        };\n      });\n    });\n  };\n};\nexport var logout = function logout() {\n  return function (dispatch) {\n    return AuthService.logOut().then(function (response) {\n      if (response.status === \"success\") {\n        dispatch({\n          type: LOGOUT,\n          payload: {\n            user: null\n          }\n        });\n        Promise.resolve();\n        return response;\n      }\n    });\n  };\n};\nexport var onLoad = function onLoad(user) {\n  return function (dispatch) {\n    return AuthService.onLoad(user).then(function (response) {\n      return new Promise(function (resolvefn, rejectfn) {\n        if (response && response.bhaashadan && response.bhaashadan.user) {\n          var apiURL = globalconst.apiBaseUrl + \"/api/paragraph\" + \"?language=\" + response.bhaashadan.user.languages[0].key + \"&page=1\";\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {\n              user: response.bhaashadan.user,\n              data: {\n                next: apiURL\n              }\n            }\n          });\n          resolvefn(dataFetchService.getParagraph({\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            nextUrl: null\n          }));\n        } else return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: \"not called\"\n        };\n      }).then(function (paraResponse) {\n        dispatch({\n          type: LOAD_PARA,\n          payload: {\n            selectedLanguage: response.bhaashadan.user.languages[0],\n            selectedWorkType: \"Pending\",\n            data: paraResponse.data,\n            alreadyExists: false,\n            nextUrl: paraResponse.data.next\n          }\n        });\n        return {\n          loginResponse: {\n            data: {\n              user: response.bhaashadan.user\n            }\n          },\n          paraResponse: paraResponse\n        };\n      }).catch(function (error) {\n        return error;\n      });\n    });\n  };\n};","map":{"version":3,"names":["LOGIN_SUCCESS","LOGOUT","ONLOAD","INITIALIZE","LOAD_PARA","AuthService","dataFetchService","globalconst","initialize","getParagraph","login","user","dispatch","logIn","then","response","apiURL","apiBaseUrl","data","languages","key","alert","JSON","stringify","Promise","res","rej","type","payload","next","status","selectedLanguage","selectedWorkType","nextUrl","loginResponse","paraResponse","alreadyExists","catch","error","bhaashadan","logout","logOut","resolve","onLoad","resolvefn","rejectfn"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/screens/Login/Login.js"],"sourcesContent":["import { LOGIN_SUCCESS, LOGOUT,ONLOAD,INITIALIZE, LOAD_PARA } from \"./type\";\nimport AuthService from \"../services/authService\";\nimport dataFetchService from \"../services/dataFetchService\";\nimport globalconst from \"../constant/globalvariables\";\nimport { initialize,getParagraph } from \"./fetch\";\n/*\nexport const login = (user) => () => {\n  return function (dispatch){\n    AuthService.logIn(user).then(\n      (response) => {\n        \n        alert(JSON.stringify(response));\n        if (response.status===200) {\n          localStorage.setItem('userToken', axios.defaults.headers.common.Authorization)\n          const user=response.data.user;\n          alert(JSON.stringify(user));\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {user:response.data.user }\n  \n          })\n  \n         dispatch(getParagraph({selectedLanguageKey:response.data.user.languages[0].key,workType:\"Pending\"}));\n          \n  \n        }\n  \n          Promise.resolve();\n          return response\n  \n        }\n      ,\n      (error) => {\n  \n  Promise.reject();\n  \n        return error;\n      }\n    );\n  }\n}\n*/\nexport const login = (user) => (dispatch) => {\n   \n  return AuthService.logIn(user).then(\n    (response) => {\n      const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.data.user.languages[0].key+\"&page=1\";\n      alert(\"login service\"+JSON.stringify(response));\n \n        return new Promise(function(res, rej){\n          dispatch({\n            type: LOGIN_SUCCESS,\n            payload: {user:response.data.user,data:{next:apiURL} }\n  \n          });\n          if(response.status==200){\n          \n          res(dataFetchService.getParagraph({selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",nextUrl:null}));\n          }\n          else\n            rej({loginResponse:response,paraResponse:\"Not called\"});\n      }).then((paraResponse) =>  {\n       // alert(\"paraResponse\"+paraResponse);\n        dispatch({\n        type: LOAD_PARA,\n        payload: {selectedLanguage:response.data.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false,\n        nextUrl:paraResponse.data.next }\n\n      })\n    return {loginResponse:response,paraResponse:paraResponse}\n    }\n    \n    ).catch((error)=>{\n      return {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:error};\n    })\n  \n}\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  return AuthService.logOut().then((response) => {\n    if (response.status === \"success\") {\n      \n      dispatch({\n        type: LOGOUT,\n        payload:{user:null}\n      });\n      \n      Promise.resolve();\n      return response;\n    }\n  });\n};\n\nexport const onLoad = (user) => (dispatch) => {\n  return  AuthService.onLoad(user).then((response) => {\n   // let userObj=response;\n    return new Promise(function(resolvefn, rejectfn){\n      //alert(\"resolvefn\"+JSON.stringify(resolvefn)+ \" rejectfn \"+JSON.stringify(rejectfn));\n     // if(response && response.bhaashadan )\n     \n     if(response && response.bhaashadan && response.bhaashadan.user)\n      {\n        const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: {user:response.bhaashadan.user,data:{next:apiURL}}\n\n      });\n    //  if(resolvefn)\n    //const apiURL=globalconst.apiBaseUrl+\"/api/paragraph\"+\"?language=\"+response.bhaashadan.user.languages[0].key+\"&page=1\";\n     resolvefn(dataFetchService.getParagraph({selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",nextUrl:null}));\n      }\n     else\n      return {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:\"not called\"}\n  }).then((paraResponse) =>  {\n    //alert(\"paraResponse\"+paraResponse);\n    dispatch({\n    type: LOAD_PARA,\n    payload: {selectedLanguage:response.bhaashadan.user.languages[0],selectedWorkType:\"Pending\",data:paraResponse.data,alreadyExists:false,\n    nextUrl:paraResponse.data.next }\n\n  })\nreturn {loginResponse:{data:{user:response.bhaashadan.user}},paraResponse:paraResponse}\n}).catch(error=>{\n  return error;\n}\n\n)\n\n\n\n  });\n};\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}