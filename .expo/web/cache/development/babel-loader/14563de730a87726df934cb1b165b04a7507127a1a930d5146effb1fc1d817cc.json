{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { SETLANGUAGE, SETWORKTYPE, ONLOAD, LOAD_PARA, LOGIN_SUCCESS } from \"../actions/type\";\nimport fetchReducer from \"./fetch\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport languageReducer from \"./languages\";\nvar dataReducer = function dataReducer(state, action) {\n  var type = action.type,\n    payload = action.payload;\n  if (payload && payload.data) alert(type + \" work type payload next url\" + payload.data.next + \" prev state \" + state.selectedObject.nextUrl);else alert(type + \" work type payload data not exist\");\n  switch (type) {\n    case SETLANGUAGE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedObject: _objectSpread(_objectSpread({}, state.selectedObject), {}, {\n          results: _toConsumableArray(new Set(state.selectedObject.results, payload.data.results)),\n          prevUrl: payload.data.previous,\n          nextUrl: payload.data.next\n        })\n      });\n    case SETWORKTYPE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedObject: _objectSpread(_objectSpread({}, state.selectedObject), {}, {\n          results: _toConsumableArray(new Set(state.selectedObject.results, payload.data.results)),\n          prevUrl: payload.data.previous,\n          nextUrl: payload.data.next\n        })\n      });\n    case LOAD_PARA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedObject: _objectSpread(_objectSpread({}, state.selectedObject), {}, {\n          results: _toConsumableArray(new Set(state.selectedObject.results, payload.data.results))\n        })\n      });\n    case LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfObject: [state.selectedObject]\n      });\n    default:\n      return state;\n  }\n};\nfunction workTypeReducer(state, action) {\n  var intermediateState = dataReducer(state, action);\n  var finalState = fetchReducer(intermediateState, action);\n  return finalState;\n}\nexport default workTypeReducer;","map":{"version":3,"names":["SETLANGUAGE","SETWORKTYPE","ONLOAD","LOAD_PARA","LOGIN_SUCCESS","fetchReducer","combineReducers","configureStore","languageReducer","dataReducer","state","action","type","payload","data","alert","next","selectedObject","nextUrl","_objectSpread","results","_toConsumableArray","Set","prevUrl","previous","listOfObject","workTypeReducer","intermediateState","finalState"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/reducers/worktype.js"],"sourcesContent":["import { SETLANGUAGE, SETWORKTYPE,ONLOAD,LOAD_PARA ,LOGIN_SUCCESS} from \"../actions/type\";\r\nimport fetchReducer from \"./fetch\";\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport languageReducer from \"./languages\";\r\n\r\n//const user = null;\r\n//const initialState={lanIndex:0,workType:\"Pending\",results:[]}\r\n const dataReducer= (state, action) => {\r\n  const { type, payload } = action;\r\n // alert(type+\"state in worktype reducer \"+JSON.stringify(state)); \r\n if(payload && payload.data)\r\n  alert(type+\" work type payload next url\"+payload.data.next+\" prev state \"+state.selectedObject.nextUrl);\r\nelse\r\n  alert(type+\" work type payload data not exist\"); \r\nswitch (type) {\r\n  case SETLANGUAGE:\r\n      return{\r\n        ...state,\r\n       // selectedLanguage:payload.selectedLanguage,\r\n       // selectedWorkType:payload.selectedWorkType,\r\n       selectedObject:{...state.selectedObject,\r\n        results:[...new Set(state.selectedObject.results,payload.data.results)],\r\n        prevUrl:payload.data.previous,\r\n        nextUrl:payload.data.next \r\n                },\r\n      };\r\n    case SETWORKTYPE:\r\n      return{\r\n        ...state,\r\n      //  selectedLanguage:payload.selectedLanguage,\r\n      selectedObject:{...state.selectedObject,\r\n        results:[...new Set(state.selectedObject.results,payload.data.results)],\r\n        prevUrl:payload.data.previous,\r\n        nextUrl:payload.data.next \r\n                  },\r\n        \r\n      }\r\n     /* case LOAD_PARA:\r\n      return{\r\n        ...state,\r\n        listOfObject:[...state.listOfObject.filter((obj)=>(!(obj.selectedLanguage.key==state.selectedLanguage.key && obj.selectedWorkType==state.selectedWorkType)))\r\n          ,state.selectedObject]\r\n      }\r\n      */\r\n    \r\n      case LOAD_PARA:\r\n        return{\r\n          ...state,\r\n          selectedObject:{...state.selectedObject,\r\n                        results:[...new Set(state.selectedObject.results,payload.data.results)],\r\n                       // prevUrl:state.selectedObject.nextUrlurl,\r\n                       // nextUrl:payload.data.next\r\n                          }\r\n                          \r\n          }\r\n    case LOGIN_SUCCESS:\r\n    return {\r\n             ...state,\r\n            listOfObject:[state.selectedObject],\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n  };\r\n\r\n\r\nfunction workTypeReducer(state, action) {\r\n    const intermediateState =dataReducer(state, action)\r\n    const finalState =fetchReducer(intermediateState, action)\r\n    return finalState\r\n  }\r\n\r\n\r\n\r\nexport default workTypeReducer\r\n\r\n"],"mappings":";;;;AAAA,SAASA,WAAW,EAAEC,WAAW,EAACC,MAAM,EAACC,SAAS,EAAEC,aAAa;AACjE,OAAOC,YAAY;AACnB,SAASC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,eAAe;AAIrB,IAAMC,WAAW,GAAE,SAAbA,WAAWA,CAAGC,KAAK,EAAEC,MAAM,EAAK;EACrC,IAAQC,IAAI,GAAcD,MAAM,CAAxBC,IAAI;IAAEC,OAAO,GAAKF,MAAM,CAAlBE,OAAO;EAEtB,IAAGA,OAAO,IAAIA,OAAO,CAACC,IAAI,EACzBC,KAAK,CAACH,IAAI,GAAC,6BAA6B,GAACC,OAAO,CAACC,IAAI,CAACE,IAAI,GAAC,cAAc,GAACN,KAAK,CAACO,cAAc,CAACC,OAAO,CAAC,CAAC,KAExGH,KAAK,CAACH,IAAI,GAAC,mCAAmC,CAAC;EACjD,QAAQA,IAAI;IACV,KAAKZ,WAAW;MACZ,OAAAmB,aAAA,CAAAA,aAAA,KACKT,KAAK;QAGTO,cAAc,EAAAE,aAAA,CAAAA,aAAA,KAAKT,KAAK,CAACO,cAAc;UACtCG,OAAO,EAAAC,kBAAA,CAAK,IAAIC,GAAG,CAACZ,KAAK,CAACO,cAAc,CAACG,OAAO,EAACP,OAAO,CAACC,IAAI,CAACM,OAAO,CAAC,CAAC;UACvEG,OAAO,EAACV,OAAO,CAACC,IAAI,CAACU,QAAQ;UAC7BN,OAAO,EAACL,OAAO,CAACC,IAAI,CAACE;QAAI;MAChB;IAEb,KAAKf,WAAW;MACd,OAAAkB,aAAA,CAAAA,aAAA,KACKT,KAAK;QAEVO,cAAc,EAAAE,aAAA,CAAAA,aAAA,KAAKT,KAAK,CAACO,cAAc;UACrCG,OAAO,EAAAC,kBAAA,CAAK,IAAIC,GAAG,CAACZ,KAAK,CAACO,cAAc,CAACG,OAAO,EAACP,OAAO,CAACC,IAAI,CAACM,OAAO,CAAC,CAAC;UACvEG,OAAO,EAACV,OAAO,CAACC,IAAI,CAACU,QAAQ;UAC7BN,OAAO,EAACL,OAAO,CAACC,IAAI,CAACE;QAAI;MACd;IAWb,KAAKb,SAAS;MACZ,OAAAgB,aAAA,CAAAA,aAAA,KACKT,KAAK;QACRO,cAAc,EAAAE,aAAA,CAAAA,aAAA,KAAKT,KAAK,CAACO,cAAc;UACzBG,OAAO,EAAAC,kBAAA,CAAK,IAAIC,GAAG,CAACZ,KAAK,CAACO,cAAc,CAACG,OAAO,EAACP,OAAO,CAACC,IAAI,CAACM,OAAO,CAAC;QAAC;MAGpE;IAGvB,KAAKhB,aAAa;MAClB,OAAAe,aAAA,CAAAA,aAAA,KACYT,KAAK;QACTe,YAAY,EAAC,CAACf,KAAK,CAACO,cAAc;MAAC;IAE3C;MACE,OAAOP,KAAK;EAChB;AACA,CAAC;AAGH,SAASgB,eAAeA,CAAChB,KAAK,EAAEC,MAAM,EAAE;EACpC,IAAMgB,iBAAiB,GAAElB,WAAW,CAACC,KAAK,EAAEC,MAAM,CAAC;EACnD,IAAMiB,UAAU,GAAEvB,YAAY,CAACsB,iBAAiB,EAAEhB,MAAM,CAAC;EACzD,OAAOiB,UAAU;AACnB;AAIF,eAAeF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}