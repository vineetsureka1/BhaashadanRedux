{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { SETLANGUAGE, SETWORKTYPE, ONLOAD, LOAD_PARA, LOGIN_SUCCESS } from \"../actions/type\";\nimport fetchReducer from \"./fetch\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport languageReducer from \"./languages\";\nvar dataReducer = function dataReducer(state, action) {\n  var _objectSpread2;\n  var type = action.type,\n    payload = action.payload;\n  switch (type) {\n    case SETLANGUAGE:\n      return _objectSpread(_objectSpread({}, state), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, payload.selectedLanguage, _objectSpread({}, [payload.selectedWorkType])), _defineProperty(_objectSpread2, \"listOfObject\", _objectSpread(_objectSpread({}, listOfObject), [payload.selectedLanguage])), _objectSpread2));\n    case SETWORKTYPE:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({}, payload.selectedLanguage, payload.alreadyExists ? _objectSpread(_objectSpread({}, state.selectedObject), {}, {\n        results: _toConsumableArray(new Set(state.selectedObject.results, payload.data.results)),\n        prevUrl: payload.data.previous,\n        nextUrl: payload.data.next\n      }) : _objectSpread({}, state.selectedObject)));\n    case LOAD_PARA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selectedObject: payload.alreadyExists ? _objectSpread(_objectSpread({}, state.selectedObject), {}, {\n          results: _toConsumableArray(new Set(state.selectedObject.results, payload.data.results))\n        }) : _objectSpread(_objectSpread({}, state.selectedObject), {}, {\n          results: _toConsumableArray(new Set(payload.data.results))\n        })\n      });\n    case LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        listOfObject: [state[payload.user.languages[0]]]\n      });\n    default:\n      return state;\n  }\n};\nfunction workTypeReducer(state, action) {\n  var intermediateState = dataReducer(state, action);\n  var finalState = fetchReducer(intermediateState, action);\n  return finalState;\n}\nexport default workTypeReducer;","map":{"version":3,"names":["SETLANGUAGE","SETWORKTYPE","ONLOAD","LOAD_PARA","LOGIN_SUCCESS","fetchReducer","combineReducers","configureStore","languageReducer","dataReducer","state","action","_objectSpread2","type","payload","_objectSpread","_defineProperty","selectedLanguage","selectedWorkType","listOfObject","alreadyExists","selectedObject","results","_toConsumableArray","Set","data","prevUrl","previous","nextUrl","next","user","languages","workTypeReducer","intermediateState","finalState"],"sources":["C:/Users/vinee/Desktop/BhaashadanRedux/src/reducers/worktype.js"],"sourcesContent":["import { SETLANGUAGE, SETWORKTYPE,ONLOAD,LOAD_PARA ,LOGIN_SUCCESS} from \"../actions/type\";\r\nimport fetchReducer from \"./fetch\";\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\r\nimport languageReducer from \"./languages\";\r\n\r\n//const user = null;\r\n//const initialState={lanIndex:0,workType:\"Pending\",results:[]}\r\n const dataReducer= (state, action) => {\r\n  const { type, payload } = action;\r\n // alert(type+\"state in worktype reducer \"+JSON.stringify(state)); \r\n /*if(payload && payload.data)\r\n  alert(type+\" work type payload next url\"+payload.data.next+\" prev state \"+JSON.stringify(payload));\r\nelse\r\n  alert(type+\" work type payload data not exist\"); */\r\nswitch (type) {\r\n  case SETLANGUAGE:\r\n      return{\r\n        ...state,\r\n       // selectedLanguage:payload.selectedLanguage,\r\n       // selectedWorkType:payload.selectedWorkType,\r\n       [payload.selectedLanguage]:{...[payload.selectedWorkType]},\r\n       listOfObject:{...listOfObject,...[payload.selectedLanguage]}\r\n      };\r\n    case SETWORKTYPE:\r\n      return{\r\n        ...state,\r\n      //  selectedLanguage:payload.selectedLanguage,\r\n      [payload.selectedLanguage]:payload.alreadyExists?{...state.selectedObject,\r\n        results:[...new Set(state.selectedObject.results,payload.data.results)],\r\n        prevUrl:payload.data.previous,\r\n        nextUrl:payload.data.next \r\n                  }:{...state.selectedObject},\r\n        \r\n      }\r\n     /* case LOAD_PARA:\r\n      return{\r\n        ...state,\r\n        listOfObject:[...state.listOfObject.filter((obj)=>(!(obj.selectedLanguage.key==state.selectedLanguage.key && obj.selectedWorkType==state.selectedWorkType)))\r\n          ,state.selectedObject]\r\n      }\r\n      */\r\n    \r\n      case LOAD_PARA:\r\n        return{\r\n          ...state,\r\n          selectedObject:payload.alreadyExists?{...state.selectedObject,\r\n            results:[...new Set(state.selectedObject.results,payload.data.results)],\r\n           // prevUrl:payload.data.previous,\r\n           // nextUrl:payload.data.next \r\n                      }:{...state.selectedObject,results:[...new Set(payload.data.results)]},\r\n                          \r\n          }\r\n    case LOGIN_SUCCESS:\r\n    return {\r\n             ...state,\r\n            listOfObject:[state[payload.user.languages[0]]],\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n  };\r\n\r\n\r\nfunction workTypeReducer(state, action) {\r\n    const intermediateState =dataReducer(state, action)\r\n    const finalState =fetchReducer(intermediateState, action)\r\n    return finalState\r\n  }\r\n\r\n\r\n\r\nexport default workTypeReducer"],"mappings":";;;;AAAA,SAASA,WAAW,EAAEC,WAAW,EAACC,MAAM,EAACC,SAAS,EAAEC,aAAa;AACjE,OAAOC,YAAY;AACnB,SAASC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,OAAOC,eAAe;AAIrB,IAAMC,WAAW,GAAE,SAAbA,WAAWA,CAAGC,KAAK,EAAEC,MAAM,EAAK;EAAA,IAAAC,cAAA;EACrC,IAAQC,IAAI,GAAcF,MAAM,CAAxBE,IAAI;IAAEC,OAAO,GAAKH,MAAM,CAAlBG,OAAO;EAMvB,QAAQD,IAAI;IACV,KAAKb,WAAW;MACZ,OAAAe,aAAA,CAAAA,aAAA,KACKL,KAAK,QAAAE,cAAA,OAAAI,eAAA,CAAAJ,cAAA,EAGRE,OAAO,CAACG,gBAAgB,EAAAF,aAAA,KAAM,CAACD,OAAO,CAACI,gBAAgB,CAAC,IAAAF,eAAA,CAAAJ,cAAA,kBAAAG,aAAA,CAAAA,aAAA,KACxCI,YAAY,GAAI,CAACL,OAAO,CAACG,gBAAgB,CAAC,IAAAL,cAAA;IAE9D,KAAKX,WAAW;MACd,OAAAc,aAAA,CAAAA,aAAA,KACKL,KAAK,OAAAM,eAAA,KAETF,OAAO,CAACG,gBAAgB,EAAEH,OAAO,CAACM,aAAa,GAAAL,aAAA,CAAAA,aAAA,KAAKL,KAAK,CAACW,cAAc;QACvEC,OAAO,EAAAC,kBAAA,CAAK,IAAIC,GAAG,CAACd,KAAK,CAACW,cAAc,CAACC,OAAO,EAACR,OAAO,CAACW,IAAI,CAACH,OAAO,CAAC,CAAC;QACvEI,OAAO,EAACZ,OAAO,CAACW,IAAI,CAACE,QAAQ;QAC7BC,OAAO,EAACd,OAAO,CAACW,IAAI,CAACI;MAAI,KAAAd,aAAA,KACTL,KAAK,CAACW,cAAc,CAAC;IAWvC,KAAKlB,SAAS;MACZ,OAAAY,aAAA,CAAAA,aAAA,KACKL,KAAK;QACRW,cAAc,EAACP,OAAO,CAACM,aAAa,GAAAL,aAAA,CAAAA,aAAA,KAAKL,KAAK,CAACW,cAAc;UAC3DC,OAAO,EAAAC,kBAAA,CAAK,IAAIC,GAAG,CAACd,KAAK,CAACW,cAAc,CAACC,OAAO,EAACR,OAAO,CAACW,IAAI,CAACH,OAAO,CAAC;QAAC,KAAAP,aAAA,CAAAA,aAAA,KAGvDL,KAAK,CAACW,cAAc;UAACC,OAAO,EAAAC,kBAAA,CAAK,IAAIC,GAAG,CAACV,OAAO,CAACW,IAAI,CAACH,OAAO,CAAC;QAAC;MAAC;IAGxF,KAAKlB,aAAa;MAClB,OAAAW,aAAA,CAAAA,aAAA,KACYL,KAAK;QACTS,YAAY,EAAC,CAACT,KAAK,CAACI,OAAO,CAACgB,IAAI,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC;MAAC;IAEvD;MACE,OAAOrB,KAAK;EAChB;AACA,CAAC;AAGH,SAASsB,eAAeA,CAACtB,KAAK,EAAEC,MAAM,EAAE;EACpC,IAAMsB,iBAAiB,GAAExB,WAAW,CAACC,KAAK,EAAEC,MAAM,CAAC;EACnD,IAAMuB,UAAU,GAAE7B,YAAY,CAAC4B,iBAAiB,EAAEtB,MAAM,CAAC;EACzD,OAAOuB,UAAU;AACnB;AAIF,eAAeF,eAAe"},"metadata":{},"sourceType":"module","externalDependencies":[]}