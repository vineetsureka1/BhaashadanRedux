{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useLayoutEffect, useState } from 'react';\nimport react, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport CardFrame from \"./cardFrame\";\nimport Styles from \"../constant/GlobalStyles\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport ButtonTypeRadio from \"./ButtonTypeRadio\";\nimport ModalView from \"./ModalView\";\nimport Colors from \"../constant/color\";\nimport { useSelector } from 'react-redux';\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar FlatListView = function FlatListView(props) {\n  function _renderItem(item) {\n    return _createElement(CardFrame, _objectSpread(_objectSpread({}, item), {}, {\n      key: item.id,\n      workType: props.stateObject.selectedObject.selectedWorkType\n    }));\n  }\n  return _jsx(View, {\n    children: _jsx(FlatList, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: {\n        justifyContent: 'center',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      data: props.stateObject.selectedObject.results,\n      renderItem: function renderItem(item, props) {\n        return _renderItem(item);\n      },\n      ListEmptyComponent: _jsx(View, {\n        children: _jsx(Text, {\n          children: \" no item to render\"\n        })\n      }),\n      horizontal: false\n    }, function (item) {\n      return item.id;\n    })\n  });\n};\nfunction handleScroll(state) {\n  {}\n}\n;\nexport default FlatListView;","map":{"version":3,"names":["StatusBar","React","useLayoutEffect","useState","react","Component","StyleSheet","Text","View","TouchableOpacity","Modal","FlatList","ActivityIndicator","SafeAreaView","Dimensions","axios","CardFrame","Styles","Header","Profile","ButtonTypeRadio","ModalView","Colors","useSelector","createElement","_createElement","jsx","_jsx","FlatListView","props","_renderItem","item","_objectSpread","key","id","workType","stateObject","selectedObject","selectedWorkType","children","keyExtractor","contentContainerStyle","justifyContent","flexDirection","flexWrap","data","results","renderItem","ListEmptyComponent","horizontal","handleScroll","state"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/customComponent/FlatLIstView.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useLayoutEffect,useState} from 'react';\nimport react, { Component } from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Modal, FlatList, ActivityIndicator,SafeAreaView,Dimensions} from 'react-native';\nimport axios from \"axios\";\n//import { useInfiniteQuery } from 'react-query';\n\nimport CardFrame from './cardFrame';\nimport Styles from '../constant/GlobalStyles'\nimport Header from './Header';\nimport Profile from './Profile';\nimport ButtonTypeRadio from './ButtonTypeRadio';\nimport ModalView from './ModalView';\n\n\nimport Colors from '../constant/color'\nimport { useSelector } from 'react-redux';\n\nconst FlatListView=(props)=>{\n    //const state1 = useSelector((state) => state);\n   // const state = props.stateObject;\n    //const state=state1.selectedObject;\n//    alert(\"state in flatlist\"+JSON.stringify(state));\n\n//var selectedItem=null;\nfunction _renderItem(item){\n  // alert(item);\n  return (<CardFrame {...item} key={item.id} workType={props.stateObject.selectedObject.selectedWorkType}/>)\n}\n\n    return(\n      <View>\n        <FlatList\n                    //ref={this.flatListRef}\n                    keyExtractor={(item) => item.id}\n                    key={(item)=>item.id}\n                    contentContainerStyle={{ justifyContent: 'center', flexDirection: 'row', flexWrap: 'wrap' }}\n                    data={props.stateObject.selectedObject.results}\n                    renderItem={(item,props)=>_renderItem(item)}\n                 //  renderItem={(item)=><View><Text>{item.id}</Text></View>}\n                   ListEmptyComponent={<View><Text> no item to render</Text></View>}\n                  // hasMore={state.language.finalObject[state.language.selectedLanguage.key][state.language.selectedWorkType].hasMore}\n                   /*onEndReached={\n                     state.language.finalObject[state.language.selectedLanguage.key][state.language.selectedWorkType].hasMore?\n                     handleScroll.bind(this)\n                    :\n                    \"\"\n                   }\n                   onEndReachedThreshold={\n                     this.state.itemToRender[state.language.selectedLanguage.key][this.state.language.selectedWorkType].hasMore?\n                    0.2\n                    :\n                    0\n                    }\n                    */\n                    //refreshing={refreshing}\n                    horizontal={false}\n                    //onEndReached={this.handleScroll.bind(this)}\n                   // refreshing={this.state.refreshing}\n                 //  getItemLayout={(any,number) => ( {length: 200,offset:(250*((number-1)/numberOfColumn)), index: number})}\n                    //initialScrollIndex={0}\n                  //  initialScrollIndex={this.state.itemToRender[this.state.workType][this.state.selectedLanguage.key].scrollIndex}\n                    //scrollEnabled={true}\n                   // onScroll={this.handleScroll1.bind(this)}\n                   // maxToRenderPerBatch={10}\n                   // numColumns={2}\n                   // style={{width:'100%',flexGrow:1}}\n                    //onMomentumScrollBegin={() => {this.onEndReachedCalledDuringMomentum = false;}}\n                    />\n                    \n                  \n                    </View>\n    )\n};\nfunction handleScroll(state) {\n  //alert(\"hasmore\"+this.state.itemToRender[this.state.workType][this.state.selectedLanguage.key].hasMore)\n    //  if(!this.state.refreshing && this.state.itemToRender[this.state.workType][this.state.selectedLanguage.key].nextPage!=null)\n      {\n         // this.state.itemToRender[this.state.workType][this.state.selectedLanguage.key].scrollIndex=this.pageSize+this.state.itemToRender[this.state.workType][this.state.selectedLanguage.key].scrollIndex;\n          \n         //this.getParagraph({selectedLanguage:state.selectedLanguage,selectedworkType:state.selectedworkType});\n          \n      }\n      \n    };\nexport default FlatListView"],"mappings":";;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAEC,eAAe,EAACC,QAAQ,QAAO,OAAO;AACpD,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAGhB,OAAOC,MAAM;AACb,SAASC,WAAW,QAAQ,aAAa;AAAC,SAAAC,aAAA,IAAAC,cAAA;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAE1C,IAAMC,YAAY,GAAC,SAAbA,YAAYA,CAAEC,KAAK,EAAG;EAO5B,SAASC,WAAWA,CAACC,IAAI,EAAC;IAExB,OAAQN,cAAA,CAACT,SAAS,EAAAgB,aAAA,CAAAA,aAAA,KAAKD,IAAI;MAAEE,GAAG,EAAEF,IAAI,CAACG,EAAG;MAACC,QAAQ,EAAEN,KAAK,CAACO,WAAW,CAACC,cAAc,CAACC;IAAiB,EAAC,CAAC;EAC3G;EAEI,OACEX,IAAA,CAACnB,IAAI;IAAA+B,QAAA,EACHZ,IAAA,CAAChB,QAAQ;MAEG6B,YAAY,EAAE,SAAAA,aAACT,IAAI;QAAA,OAAKA,IAAI,CAACG,EAAE;MAAA,CAAC;MAEhCO,qBAAqB,EAAE;QAAEC,cAAc,EAAE,QAAQ;QAAEC,aAAa,EAAE,KAAK;QAAEC,QAAQ,EAAE;MAAO,CAAE;MAC5FC,IAAI,EAAEhB,KAAK,CAACO,WAAW,CAACC,cAAc,CAACS,OAAQ;MAC/CC,UAAU,EAAE,SAAAA,WAAChB,IAAI,EAACF,KAAK;QAAA,OAAGC,WAAW,CAACC,IAAI,CAAC;MAAA,CAAC;MAE7CiB,kBAAkB,EAAErB,IAAA,CAACnB,IAAI;QAAA+B,QAAA,EAACZ,IAAA,CAACpB,IAAI;UAAAgC,QAAA,EAAC;QAAkB,CAAM;MAAC,CAAM,CAAE;MAgBhEU,UAAU,EAAE;IAAM,GArBb,UAAClB,IAAI;MAAA,OAAGA,IAAI,CAACG,EAAE;IAAA,CAiCnB;EAAC,CAGI,CAAC;AAE3B,CAAC;AACD,SAASgB,YAAYA,CAACC,KAAK,EAAE;EAGvB,CAKA;AAEF;AAAC;AACL,eAAevB,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}