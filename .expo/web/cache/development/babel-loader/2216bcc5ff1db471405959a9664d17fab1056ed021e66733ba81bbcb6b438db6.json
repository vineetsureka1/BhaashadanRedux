{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useEffect, useLayoutEffect, useState } from 'react';\nimport react, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport CardFrame from \"./cardFrame\";\nimport Styles from \"../constant/GlobalStyles\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport ButtonTypeRadio from \"./ButtonTypeRadio\";\nimport ModalView from \"./ModalView\";\nimport Colors from \"../constant/color\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParagraph } from \"../actions/fetch\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction HandleOnScroll(_ref) {\n  var props = _ref.props,\n    dep = _ref.dep;\n  useEffect(function () {\n    if (refreshing && isLoading) {\n      dispatch(getParagraph({\n        selectedLanguage: stateObj.selectedObject.selectedLanguage,\n        selectedWorkType: stateObj.selectedObject.selectedWorkType,\n        alreadyExists: true,\n        nextUrl: stateObj.selectedObject.nextUrl\n      }));\n      setLangState({\n        isLoading: false,\n        refreshing: false\n      });\n    }\n  }, [isLoading]);\n  return isLoading;\n}\nfunction FlatListView(_ref2) {\n  var props = _ref2.props,\n    dependency = _ref2.dependency;\n  useEffect(function () {\n    var _props = _objectSpread({}, props),\n      refreshing = _props.refreshing;\n    setRefreshing(false);\n  }, [refreshing]);\n  var _useState = useState(props.refreshing),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  return _jsx(View, {\n    children: props.refreshing ? _jsx(View, {\n      children: _jsx(ActivityIndicator, {\n        size: \"large\"\n      })\n    }) : _jsx(FlatList, _objectSpread({}, props))\n  });\n}\n;\nexport default FlatListView;","map":{"version":3,"names":["StatusBar","React","useEffect","useLayoutEffect","useState","react","Component","StyleSheet","Text","View","TouchableOpacity","Modal","FlatList","ActivityIndicator","SafeAreaView","Dimensions","axios","CardFrame","Styles","Header","Profile","ButtonTypeRadio","ModalView","Colors","useDispatch","useSelector","getParagraph","jsx","_jsx","HandleOnScroll","_ref","props","dep","refreshing","isLoading","dispatch","selectedLanguage","stateObj","selectedObject","selectedWorkType","alreadyExists","nextUrl","setLangState","FlatListView","_ref2","dependency","_props","_objectSpread","setRefreshing","_useState","_useState2","_slicedToArray","children","size"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/customComponent/FlatLIstView.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useEffect, useLayoutEffect,useState} from 'react';\nimport react, { Component } from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Modal, FlatList, ActivityIndicator,SafeAreaView,Dimensions} from 'react-native';\nimport axios from \"axios\";\n//import { useInfiniteQuery } from 'react-query';\n\nimport CardFrame from './cardFrame';\nimport Styles from '../constant/GlobalStyles'\nimport Header from './Header';\nimport Profile from './Profile';\nimport ButtonTypeRadio from './ButtonTypeRadio';\nimport ModalView from './ModalView';\n\n\nimport Colors from '../constant/color'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParagraph } from '../actions/fetch';\n//import Languages from './languages';\n\nfunction HandleOnScroll({ props, dep }) {\n    useEffect(() => {\n      //setIsLoading(false);\n      if(refreshing && isLoading){\n     // setLangState({isLoading:true,refreshing:true});\n      dispatch(getParagraph({selectedLanguage:stateObj.selectedObject.selectedLanguage,selectedWorkType:stateObj.selectedObject.selectedWorkType,alreadyExists:true,nextUrl:stateObj.selectedObject.nextUrl}))\n      setLangState({isLoading:false,refreshing:false});\n      }\n  \n    }, [isLoading]);\n\n  \n    return isLoading;\n  }\n\n\nfunction FlatListView({props,dependency}){\n    useEffect(()=>{\nconst {refreshing}={...props};\nsetRefreshing(false);\n        //dispatch(getParagraph({selectedLanguage:stateObj.selectedObject.selectedLanguage,selectedWorkType:stateObj.selectedObject.selectedWorkType,alreadyExists:true,nextUrl:stateObj.selectedObject.nextUrl})) \n    },[refreshing])\n    //const state1 = useSelector((state) => state);\n   // const state = props.stateObject;\n    //const state=state1.selectedObject;\n//    alert(\"state in flatlist\"+JSON.stringify(state));\n\n\nconst [refreshing,setRefreshing]=useState(props.refreshing);\n//alert(JSON.stringify(props.refreshing))\n\n    return(\n\n      <View>\n{props.refreshing?\n<View>\n                  <ActivityIndicator size='large'/>\n              \n                  \n\n</View>:\n       \n        <FlatList {...props}/>\n}\n                  \n                    \n                    \n\n                  </View>\n    )\n};\n\nexport default FlatListView"],"mappings":";;;;AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAC3C,OAAOC,KAAK,IAAEC,SAAS,EAAEC,eAAe,EAACC,QAAQ,QAAO,OAAO;AAC/D,OAAOC,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,QAAA;AAAA,OAAAC,iBAAA;AAAA,OAAAC,YAAA;AAAA,OAAAC,UAAA;AAEzC,OAAOC,KAAK,MAAM,OAAO;AAGzB,OAAOC,SAAS;AAChB,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,OAAO;AACd,OAAOC,eAAe;AACtB,OAAOC,SAAS;AAGhB,OAAOC,MAAM;AACb,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,YAAY;AAA2B,SAAAC,GAAA,IAAAC,IAAA;AAGhD,SAASC,cAAcA,CAAAC,IAAA,EAAiB;EAAA,IAAdC,KAAK,GAAAD,IAAA,CAALC,KAAK;IAAEC,GAAG,GAAAF,IAAA,CAAHE,GAAG;EAChC9B,SAAS,CAAC,YAAM;IAEd,IAAG+B,UAAU,IAAIC,SAAS,EAAC;MAE3BC,QAAQ,CAACT,YAAY,CAAC;QAACU,gBAAgB,EAACC,QAAQ,CAACC,cAAc,CAACF,gBAAgB;QAACG,gBAAgB,EAACF,QAAQ,CAACC,cAAc,CAACC,gBAAgB;QAACC,aAAa,EAAC,IAAI;QAACC,OAAO,EAACJ,QAAQ,CAACC,cAAc,CAACG;MAAO,CAAC,CAAC,CAAC;MACxMC,YAAY,CAAC;QAACR,SAAS,EAAC,KAAK;QAACD,UAAU,EAAC;MAAK,CAAC,CAAC;IAChD;EAEF,CAAC,EAAE,CAACC,SAAS,CAAC,CAAC;EAGf,OAAOA,SAAS;AAClB;AAGF,SAASS,YAAYA,CAAAC,KAAA,EAAoB;EAAA,IAAlBb,KAAK,GAAAa,KAAA,CAALb,KAAK;IAACc,UAAU,GAAAD,KAAA,CAAVC,UAAU;EACnC3C,SAAS,CAAC,YAAI;IAClB,IAAA4C,MAAA,GAAAC,aAAA,KAAuBhB,KAAK;MAArBE,UAAU,GAAAa,MAAA,CAAVb,UAAU;IACjBe,aAAa,CAAC,KAAK,CAAC;EAEhB,CAAC,EAAC,CAACf,UAAU,CAAC,CAAC;EAOnB,IAAAgB,SAAA,GAAiC7C,QAAQ,CAAC2B,KAAK,CAACE,UAAU,CAAC;IAAAiB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAApDhB,UAAU,GAAAiB,UAAA;IAACF,aAAa,GAAAE,UAAA;EAG3B,OAEEtB,IAAA,CAACnB,IAAI;IAAA2C,QAAA,EACVrB,KAAK,CAACE,UAAU,GACjBL,IAAA,CAACnB,IAAI;MAAA2C,QAAA,EACaxB,IAAA,CAACf,iBAAiB;QAACwC,IAAI,EAAC;MAAO,CAAC;IAAC,CAI7C,CAAC,GAECzB,IAAA,CAAChB,QAAQ,EAAAmC,aAAA,KAAKhB,KAAK,CAAE;EAAC,CAMN,CAAC;AAEzB;AAAC;AAED,eAAeY,YAAY"},"metadata":{},"sourceType":"module","externalDependencies":[]}