{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { SETLANGUAGE, ONLOAD, LOGIN_SUCCESS, LOAD_PARA, SETWORKTYPE } from \"../actions/type\";\nimport fetchReducer from \"./fetch\";\nimport workTypeReducer from \"./worktype\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nvar initialState = [];\nvar dataReducer = function dataReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  var type = action.type,\n    payload = action.payload;\n  switch (type) {\n    case SETLANGUAGE:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        selectedLanguage: payload.selectedLanguage,\n        selectedWorkType: payload.selectedWorkType\n      }, state.selectedLanguage.key, _objectSpread(_objectSpread({}, state[state.selectedLanguage.key]), {}, _defineProperty({}, [payload.selectedWorkType], state[payload.selectedLanguage][payload.selectedWorkType]))));\n    case SETWORKTYPE:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        selectedLanguage: payload.selectedLanguage,\n        selectedWorkType: payload.selectedWorkType\n      }, state.selectedLanguage.key, _objectSpread(_objectSpread({}, state[state.selectedLanguage.key]), {}, _defineProperty({}, [payload.selectedWorkType], state[payload.selectedLanguage][payload.selectedWorkType]))));\n    case LOAD_PARA:\n      return _defineProperty({\n        selectedLanguage: payload.selectedLanguage,\n        selectedWorkType: payload.selectedWorkType\n      }, state.selectedLanguage.key, _objectSpread(_objectSpread({}, state[state.selectedLanguage.key]), {}, _defineProperty({}, [payload.selectedWorkType], state[payload.selectedLanguage][payload.selectedWorkType])));\n    case LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, _defineProperty({\n        selectedLanguage: payload.user.languages[0],\n        selectedWorkType: \"Pending\"\n      }, payload.user.languages[0].key, _objectSpread(_objectSpread({}, state[state.selectedLanguage.key]), {}, _defineProperty({}, [payload.selectedWorkType], state[payload.selectedLanguage][payload.selectedWorkType]))));\n    default:\n      return state;\n  }\n};\nfunction languageReducer(state, action) {\n  var intermediateState = dataReducer(state, action);\n  var intermediateState2 = workTypeReducer(intermediateState, action);\n  var finalState = fetchReducer(intermediateState2, action);\n  return finalState;\n}\nexport default languageReducer;","map":{"version":3,"names":["SETLANGUAGE","ONLOAD","LOGIN_SUCCESS","LOAD_PARA","SETWORKTYPE","fetchReducer","workTypeReducer","combineReducers","configureStore","initialState","dataReducer","state","arguments","length","undefined","action","type","payload","_objectSpread","_defineProperty","selectedLanguage","selectedWorkType","key","user","languages","languageReducer","intermediateState","intermediateState2","finalState"],"sources":["C:/Users/vinee/Desktop/BhaashadanRedux/src/reducers/languages.js"],"sourcesContent":["import { SETLANGUAGE,ONLOAD,LOGIN_SUCCESS, LOAD_PARA, SETWORKTYPE } from \"../actions/type\";\r\nimport fetchReducer from \"./fetch\";\r\nimport workTypeReducer from \"./worktype\";\r\nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\r\n\r\n//const user = null;\r\n\r\nconst initialState=[]\r\n const dataReducer= (state=initialState, action) => {\r\n  const { type, payload } = action;\r\n  //alert(type+\" state in language reducer \"+JSON.stringify(state));\r\n /* if(payload )\r\n  alert(type+\" language payload next url\"+JSON.stringify(payload)+\" prev state \");//+state.selectedObject.nextUrl);\r\nelse\r\n  alert(type+\" language payload data not exist\");\r\n*/\r\nswitch (type) {\r\n  case SETLANGUAGE:\r\n      return{...state,\r\n        selectedLanguage:payload.selectedLanguage,\r\n        selectedWorkType:payload.selectedWorkType,\r\n      [state.selectedLanguage.key]:{\r\n                      ...state[state.selectedLanguage.key],\r\n                      [[payload.selectedWorkType]]:state[payload.selectedLanguage][payload.selectedWorkType]\r\n                      }\r\n                    }\r\n    case SETWORKTYPE:\r\n      return{\r\n        ...state,\r\n        selectedLanguage:payload.selectedLanguage,\r\n        selectedWorkType:payload.selectedWorkType,\r\n      [state.selectedLanguage.key]:{\r\n        ...state[state.selectedLanguage.key],\r\n        [[payload.selectedWorkType]]:state[payload.selectedLanguage][payload.selectedWorkType]\r\n        }\r\n                    }\r\n    case LOAD_PARA:\r\n      return{\r\n        selectedLanguage:payload.selectedLanguage,\r\n        selectedWorkType:payload.selectedWorkType,\r\n      [state.selectedLanguage.key]:{\r\n        ...state[state.selectedLanguage.key],\r\n        [[payload.selectedWorkType]]:state[payload.selectedLanguage][payload.selectedWorkType]\r\n        }\r\n                    \r\n                      \r\n       //selectedObject:{...state.selectedObject,results:['a','b','c']}\r\n      }\r\n    case LOGIN_SUCCESS:\r\n                  return {\r\n                    ...state,\r\n                    selectedLanguage:payload.user.languages[0],\r\n                    selectedWorkType:\"Pending\",\r\n                    [payload.user.languages[0].key]:{\r\n                      ...state[state.selectedLanguage.key],\r\n                      [[payload.selectedWorkType]]:state[payload.selectedLanguage][payload.selectedWorkType]\r\n                      }\r\n                    \r\n                  }\r\n                \r\n                  \r\n    default:\r\n      return state;\r\n  }\r\n};\r\n  /*case ONLOAD:\r\n    return{\r\n      ...state,\r\n      selectedObject:{languageIndex:state.selectedLanguage},\r\n      trialObject:{[state.selectedLanguage]:\"\"},\r\n     // language:{lanIndex:0,workType:\"Pending\",results:[]}\r\n    };*/\r\n    /*\r\n    case LOAD_PARA:\r\n                return{\r\n                  ...state,\r\n                 trialObject:{[state.selectedLanguage.key]:{[state.selectedWorkType]:{results:payload.results}}}\r\n                 //trialObject:{[state.selectedLanguage.key]:{[state.selectedWorkType]:{results:[...new Set(state.trialObject[state.selectedLanguage.key][state.selectedWorkType].results,...payload.results)]}}}\r\n                }\r\n    case ONLOAD:\r\n                return{\r\n                  ...state,\r\n               //   isLoggedIn: payload.user?true:false,\r\n                //  user: payload.user,  \r\n                  selectedLanguage:(payload.user && payload.user.languages)?payload.user.languages[0]:{},\r\n                  selectedWorkType:\"Pending\",\r\n                 \r\n                  //finalObject:{...state.finalObject,[payload.user.languages[0]]:{[state.selectedWorkType]:{results:[]}}}\r\n                  \r\n                  \r\n                };\r\n        case LOGIN_SUCCESS:\r\n                  return {\r\n                    ...state,\r\n                //    isLoggedIn: true,\r\n                //    user: payload.user,\r\n                    selectedLanguage:payload.user.languages[0],\r\n                    selectedWorkType:\"Pending\",\r\n                    //trialObject:(payload.user && payload.user.languages)?{[payload.user.languages[0].key]:{[state.selectedWorkType]:{results:[]}}}:{},\r\n                    trialObject:{[payload.user.languages[0].key]:{\"Pending\":{results:payload.results}}}\r\n                  \r\n                //    languages:languages,\r\n                  };\r\n  case SETLANGUAGE:\r\n    \r\n    return{\r\n      ...state, \r\n     // languageList:[...state.languageList.filter((lan)=>(!(lan.languageIndex==state.selectedLanguage && lan.workType==state.selectedWorkType) ))],\r\n    //  languageList:[...state.languageList.filter((lan)=>(!(lan.languageIndex==payload.selectedLanguage && lan.workType==payload.selectedWorkType) ))],\r\n      selectedLanguage:payload.selectedLanguage,\r\n      //selectedWorkType:payload.selectedWorkType,\r\n     // selectedObject:{languageIndex:payload.selectedLanguage},\r\n      trialObject:(state.finalObject[payload.selectedLanguage.key] && state.finalObject[payload.selectedLanguage.key][state.selectedWorkType])?state.finalObject[payload.selectedLanguage.key][state.selectedWorkType]:{[payload.selectedLanguage.key]:{[state.selectedWorkType]:{results:[]}}},\r\n\r\n    };\r\n    */\r\n    \r\n\r\n\r\nfunction languageReducer(state, action) {\r\n    const intermediateState = dataReducer(state, action)\r\n    const intermediateState2 = workTypeReducer(intermediateState, action)\r\n    const finalState = fetchReducer(intermediateState2, action)\r\n    return finalState\r\n  }\r\n  \r\nexport default languageReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}