{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nimport { StatusBar } from 'expo-status-bar';\nimport React, { useLayoutEffect, useState, useEffect } from 'react';\nimport react, { Component } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport axios from \"axios\";\nimport CardFrame from \"./cardFrame\";\nimport Styles from \"../constant/GlobalStyles\";\nimport Header from \"./Header\";\nimport Profile from \"./Profile\";\nimport ButtonTypeRadio from \"./ButtonTypeRadio\";\nimport ModalView from \"./ModalView\";\nimport FlatListView from \"./FlatLIstView\";\nimport Colors from \"../constant/color\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParagraph } from \"../actions/fetch\";\nimport { createElement as _createElement } from \"react\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ListOfObject = function ListOfObject(props) {\n  var currentObj = props.currentObj;\n  var dispatch = useDispatch();\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    refreshing = _useState2[0],\n    setRefreshing = _useState2[1];\n  var isLoading = props.refreshing;\n  alert(\"currentobj \" + JSON.stringify(currentObj));\n  alert(\"current next\" + currentObj.selectedObject.nextUrl + \"current prev\" + currentObj.selectedObject.prevUrl);\n  function _renderItem(item) {\n    return _createElement(CardFrame, _objectSpread(_objectSpread({}, item), {}, {\n      key: item.id,\n      workType: currentObj.selectedObject.selectedWorkType\n    }));\n  }\n  function handleScroll() {\n    alert(\"end reached\");\n    {\n      isLoading;\n    }\n  }\n  ;\n  return _jsx(View, {\n    children: isLoading ? _jsxs(_Fragment, {\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\"\n      }), handleScroll()]\n    }) : _jsx(FlatListView, {\n      keyExtractor: function keyExtractor(item) {\n        return item.id;\n      },\n      contentContainerStyle: {\n        justifyContent: 'center',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n      },\n      data: currentObj.selectedObject.results,\n      renderItem: function renderItem(item, props) {\n        return _renderItem(item);\n      },\n      ListEmptyComponent: _jsx(View, {\n        children: _jsx(Text, {\n          children: \" no item to render\"\n        })\n      }),\n      hasMore: currentObj.selectedObject.nextUrl ? true : false,\n      onEndReached: currentObj.selectedObject.nextUrl ? handleScroll : false,\n      onEndReachedThreshold: currentObj.selectedObject.nextUrl ? 0.2 : 0,\n      horizontal: false,\n      refreshing: isLoading\n    }, function (item) {\n      return item.id;\n    })\n  });\n};\nexport default ListOfObject;","map":{"version":3,"names":["StatusBar","React","useLayoutEffect","useState","useEffect","react","Component","StyleSheet","Text","View","TouchableOpacity","Modal","FlatList","ActivityIndicator","SafeAreaView","Dimensions","axios","CardFrame","Styles","Header","Profile","ButtonTypeRadio","ModalView","FlatListView","Colors","useDispatch","useSelector","getParagraph","createElement","_createElement","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","ListOfObject","props","currentObj","dispatch","_useState","_useState2","_slicedToArray","refreshing","setRefreshing","isLoading","alert","JSON","stringify","selectedObject","nextUrl","prevUrl","_renderItem","item","_objectSpread","key","id","workType","selectedWorkType","handleScroll","children","size","keyExtractor","contentContainerStyle","justifyContent","flexDirection","flexWrap","data","results","renderItem","ListEmptyComponent","hasMore","onEndReached","onEndReachedThreshold","horizontal"],"sources":["C:/Users/vinee/Desktop/BhaashadanWithUserManagement/Bhaashadan/src/customComponent/ListOfObject.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport React,{useLayoutEffect,useState,useEffect} from 'react';\nimport react, { Component } from 'react';\nimport { StyleSheet, Text, View,TouchableOpacity,Modal, FlatList, ActivityIndicator,SafeAreaView,Dimensions} from 'react-native';\nimport axios from \"axios\";\n//import { useInfiniteQuery } from 'react-query';\n\nimport CardFrame from './cardFrame';\nimport Styles from '../constant/GlobalStyles'\nimport Header from './Header';\nimport Profile from './Profile';\nimport ButtonTypeRadio from './ButtonTypeRadio';\nimport ModalView from './ModalView';\nimport FlatListView from './FlatLIstView';\n\n\nimport Colors from '../constant/color'\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getParagraph } from '../actions/fetch';\n//import Languages from './languages';\n\nconst ListOfObject=(props)=>{\n    //const state1 = useSelector((state) => state);\n   // const state = props.stateObject;\n    //const state=state1.selectedObject;\n//    alert(\"state in flatlist\"+JSON.stringify(state));\n//const currentObj = useSelector((state) => state.language);\n//const [isLoading,setIsLoading]=useState(true);\n/*\nfunction changeRefreshing({ src, isEndReached }) {\n  \n\n  useEffect(() => {\n    fetData();\n\n  }, [refreshing]);\n\n  return refreshing;\n}\n*/\nlet currentObj = props.currentObj;\n\n//const [{isLoading,refreshing},setRefreshing]=useState({isLoading:true,refreshing:false});\nconst dispatch=useDispatch();\nconst [refreshing,setRefreshing]=useState(false);\nconst isLoading=props.refreshing;\n\n\n//let currentObj.selectedObject=props.stateObject.selectedObject;\nalert(\"currentobj \"+JSON.stringify(currentObj));\nalert(\"current next\"+currentObj.selectedObject.nextUrl+ \"current prev\"+currentObj.selectedObject.prevUrl);\n\n//var selectedItem=null;\nfunction _renderItem(item){\n  // alert(item);\n  return (<CardFrame {...item} key={item.id} workType={currentObj.selectedObject.selectedWorkType}/>)\n}\n/*\nfunction handleScroll(){\n  alert(\"end reached\");\n   if(!refreshing){\n    changeRefreshing\n // fetData();\n //setRefreshing({isLoading:true});\n//fetData();\n   }\n // setRefreshing({isLoading:false,refreshing:true})\n}*/\nfunction handleScroll() {\n//alert(JSON.stringify(\"handle scroll\"+currentObj.selectedObject));\n //if(!refreshing){\n   // dispatch(getParagraph(currentObj.selectedObject))\n\n   alert(\"end reached\");\n   //if(!refreshing)\n   {\n    isLoading;\n // fetData();\n //setRefreshing({isLoading:true});\n//fetData();\n   }\n    \n   \n // }\n     \n  \n};\n/*\nfunction fetData(){\n  //setRefreshing({isLoading:true,refreshing:true})\n  //alert(\"fetch data\");\n  setRefreshing({isLoading:true,refreshing:true})\n  dispatch(getParagraph({selectedLanguage:currentObj.selectedObject.selectedLanguage,selectedWorkType:currentObj.selectedObject.selectedWorkType,alreadyExists:true,nextUrl:currentObj.selectedObject.nextUrl}))\n setRefreshing({isLoading:false,refreshing:false})\n}*/\n    return(\n      <View>\n         {/* <FlatList\n                       {...props}\n                      // style={{width:'100%',flexGrow:1}}\n                       //onMomentumScrollBegin={() => {this.onEndReachedCalledDuringMomentum = false;}}\n                       />\n\n       */}\n\n      {\n      \n      isLoading?\n      <>\n       <ActivityIndicator size='large'/>\n       {handleScroll()}\n       </>\n        :\n        <FlatListView\n                    //ref={this.flatListRef}\n                    keyExtractor={(item) => item.id}\n                    key={(item)=>item.id}\n                    contentContainerStyle={{ justifyContent: 'center', flexDirection: 'row', flexWrap: 'wrap' }}\n                    data={currentObj.selectedObject.results}\n                    renderItem={(item,props)=>_renderItem(item)}\n                 //  renderItem={(item)=><View><Text>{item.id}</Text></View>}\n                   ListEmptyComponent={<View><Text> no item to render</Text></View>}\n                   hasMore={currentObj.selectedObject.nextUrl?true:false}\n                   //prevUrl  nextUrl\n                   onEndReached={currentObj.selectedObject.nextUrl?handleScroll:false}\n                  \n                   onEndReachedThreshold={currentObj.selectedObject.nextUrl?0.2:\n                    0\n                  }\n                   \n                    \n                    \n                    horizontal={false}\n                    //onEndReached={this.handleScroll.bind(this)}\n                  refreshing={isLoading}\n                 //  getItemLayout={(any,number) => ( {length: 200,offset:(250*((number-1)/numberOfColumn)), index: number})}\n                   // initialScrollIndex={0}\n                   // initialScrollIndex={10}\n                   // scrollEnabled={true}\n                   // onScroll={handleScroll}\n                 //   maxToRenderPerBatch={10}\n                   // numColumns={2}\n                   // style={{width:'100%',flexGrow:1}}\n                    //onMomentumScrollBegin={() => {this.onEndReachedCalledDuringMomentum = false;}}\n                    />\n                  \n                    \n                    \n}\n                    </View>\n    )\n};\n\nexport default ListOfObject"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}