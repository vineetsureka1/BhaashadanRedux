{"version":3,"sources":["index.tsx"],"names":["DebugTouchPoint","diameter","x","y","color","radius","styles","debugPoint","width","height","borderRadius","backgroundColor","left","top","DebugRect","debugRect","StyleSheet","create","position","opacity"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEO,MAAMA,eAAe,GAAG,CAAC;AAC9BC,EAAAA,QAAQ,GAAG,EADmB;AAE9BC,EAAAA,CAAC,GAAG,CAF0B;AAG9BC,EAAAA,CAAC,GAAG,CAH0B;AAI9BC,EAAAA,KAAK,GAAG;AAJsB,CAAD,KAKzB;AACJ,QAAMC,MAAM,GAAGJ,QAAQ,GAAG,CAA1B;AACA,sBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLK,MAAM,CAACC,UADF,EAEL;AACEC,MAAAA,KAAK,EAAEP,QADT;AAEEQ,MAAAA,MAAM,EAAER,QAFV;AAGES,MAAAA,YAAY,EAAET,QAHhB;AAIEU,MAAAA,eAAe,EAAEP,KAJnB;AAKEQ,MAAAA,IAAI,EAAEV,CAAC,GAAGG,MALZ;AAMEQ,MAAAA,GAAG,EAAEV,CAAC,GAAGE;AANX,KAFK,CADT;AAYE,IAAA,aAAa,EAAC;AAZhB,IADF;AAgBD,CAvBM;;;;AAwBA,MAAMS,SAAS,GAAG,CAAC;AACxBL,EAAAA,MADwB;AAExBP,EAAAA,CAAC,GAAG,CAFoB;AAGxBC,EAAAA,CAAC,GAAG,CAHoB;AAIxBC,EAAAA,KAAK,GAAG;AAJgB,CAAD,KAUnB;AACJ,QAAMI,KAAK,GAAG,CAAd;AACA,sBACE,6BAAC,iBAAD;AACE,IAAA,KAAK,EAAE,CACLF,MAAM,CAACS,SADF,EAEL;AACEP,MAAAA,KADF;AAEEC,MAAAA,MAFF;AAGEE,MAAAA,eAAe,EAAEP,KAHnB;AAIEQ,MAAAA,IAAI,EAAEV,CAAC,GAAGM,KAAK,GAAG,CAJpB;AAKEK,MAAAA,GAAG,EAAEV;AALP,KAFK,CADT;AAWE,IAAA,aAAa,EAAC;AAXhB,IADF;AAeD,CA3BM;;;;AA6BP,MAAMG,MAAM,GAAGU,wBAAWC,MAAX,CAAkB;AAC/BV,EAAAA,UAAU,EAAE;AACVW,IAAAA,QAAQ,EAAE,UADA;AAEVC,IAAAA,OAAO,EAAE;AAFC,GADmB;AAK/BJ,EAAAA,SAAS,EAAE;AACTG,IAAAA,QAAQ,EAAE,UADD;AAETC,IAAAA,OAAO,EAAE;AAFA;AALoB,CAAlB,CAAf","sourcesContent":["import { View, StyleSheet } from 'react-native';\nimport React from 'react';\n\nexport const DebugTouchPoint = ({\n  diameter = 20,\n  x = 0,\n  y = 0,\n  color = 'yellow',\n}) => {\n  const radius = diameter / 2;\n  return (\n    <View\n      style={[\n        styles.debugPoint,\n        {\n          width: diameter,\n          height: diameter,\n          borderRadius: diameter,\n          backgroundColor: color,\n          left: x - radius,\n          top: y - radius,\n        },\n      ]}\n      pointerEvents=\"none\"\n    />\n  );\n};\nexport const DebugRect = ({\n  height,\n  x = 0,\n  y = 0,\n  color = 'yellow',\n}: {\n  height: number;\n  x: number;\n  y: number;\n  color: string;\n}) => {\n  const width = 5;\n  return (\n    <View\n      style={[\n        styles.debugRect,\n        {\n          width,\n          height,\n          backgroundColor: color,\n          left: x - width / 2,\n          top: y,\n        },\n      ]}\n      pointerEvents=\"none\"\n    />\n  );\n};\n\nconst styles = StyleSheet.create({\n  debugPoint: {\n    position: 'absolute',\n    opacity: 0.7,\n  },\n  debugRect: {\n    position: 'absolute',\n    opacity: 0.5,\n  },\n});\n"]}